{
  "version": 3,
  "sources": ["../src/index.ts", "../src/object/register-custom.ts", "../src/components/form-control.tsx", "../src/components/input.tsx", "../src/hooks/value.tsx", "../src/hooks/name.tsx", "../src/utils/index.ts", "../src/utils/singleton.ts", "../src/utils/caches.ts", "../src/hooks/is-view.tsx", "../src/hooks/trigger.tsx", "../src/signals/index.ts", "../src/hooks/subscribe.tsx", "../src/utils/pubsub.ts", "../src/hooks/cache.tsx", "../src/hooks/data.tsx", "../src/components/textarea.tsx", "../src/components/label.tsx", "../src/components/select.tsx", "../src/hooks/options-api.tsx", "../src/hooks/options.tsx", "../src/hooks/variants.tsx", "../src/components/visibile.tsx", "../src/components/control-loader.tsx", "../src/components/data-list.tsx", "../src/components/checkbox-group.tsx", "../src/components/radio-group.tsx", "../src/components/repeatable.tsx", "../src/components/input-check.tsx", "../src/components/form-group.tsx", "../src/components/row.tsx", "../src/components/col.tsx", "../src/hooks/controls.tsx", "../src/utils/instance.ts", "../src/components/form.tsx", "../src/const/index.ts", "../src/utils/walker.ts"],
  "sourcesContent": ["\n\nimport registerCustomElement from \"./object/register-custom\";\nimport walker from \"./utils/walker\";\n\n\nexport {registerCustomElement, walker};", "import register from \"preact-custom-element\";\nimport FormControl from \"../components/form-control\";\nimport Form from \"../components/form\";\nimport { getWindowWidth } from \"../utils\";\nimport { FORM_CHANGE_EVENT } from \"../const\";\nimport caches from \"../utils/caches\";\nimport pubsub from \"../utils/pubsub\";\nimport instanceCount from \"../utils/instance\";\nexport default function registerCustomElement() {\n    register(FormControl, \"x-form-control\", [\"controls\", \"data\"]);\n    register(Form, \"x-form\", [\"data\"]);\n\n\n\n    window.addEventListener(\"resize\", (e) => {\n        console.log(\"instanceCount.value\", instanceCount().count);\n        if (!instanceCount().count) {\n            caches().clear();\n            return;\n        };\n        const windowWidth = getWindowWidth();\n        pubsub().broadcast('def', { windowWidth });\n    });\n    \n    document.addEventListener(FORM_CHANGE_EVENT, (e: CustomEvent) => {\n        const detail = e.detail;\n        if (!detail?.event) return;\n        pubsub().broadcast(detail.event, detail);\n    });\n}\n", "import { h, Fragment } from \"preact\";\nimport { FormControlItemType } from \"../../types\";\nimport Input from \"./input\";\nimport Textarea from \"./textarea\";\nimport Label from \"./label\";\nimport Select from \"./select\";\nimport Datalist from \"./data-list\";\nimport CheckboxGroup from \"./checkbox-group\";\nimport RadioGroup from \"./radio-group\";\nimport Repeatable from \"./repeatable\";\nimport InputCheck from \"./input-check\";\nimport FormGroup from \"./form-group\";\nimport { useEffect } from \"preact/hooks\";\nimport Row from \"./row\";\nimport Col from \"./col\";\nimport useData from \"../hooks/data\";\nimport useControls from \"../hooks/controls\";\nimport instanceCount from \"../utils/instance\";\nimport caches from \"../utils/caches\";\n\nexport default function FormControl(props: {\n  controls?: FormControlItemType[];\n  data?: any;\n  cache?: string;\n  retry?: string;\n  is_from_repeatable?: boolean;\n  is_view?: boolean;\n}) {\n  const { data } = useData(props.data);\n  const { controls } = useControls(props.controls, data.value);\n\n\n  useEffect(() => {\n    instanceCount().increment();\n    return () => {\n      if (instanceCount().count > 0) {\n        instanceCount().decrement();\n      }\n      caches().clear();\n    }\n  }, [])\n\n  return (\n    <>\n      {controls.value.map((ctrl) => {\n        let { control, child, id } = ctrl;\n        if (control.tag == \"group\") {\n          return (\n            <FormGroup\n              key={id}\n              col={child.length}\n              data={data.value}\n              is_view={props.is_view}\n              is_from_repeatable={props.is_from_repeatable}\n              {...control}\n            >\n              <FormControl\n                controls={child}\n                data={data.value}\n                is_from_repeatable={props.is_from_repeatable}\n                is_view={props.is_view}\n              />\n            </FormGroup>\n          );\n        } else if (control.tag == \"row\") {\n          return (\n            <Row\n              key={id}\n              col={child.length}\n              data={data.value}\n              is_view={props.is_view}\n              is_from_repeatable={props.is_from_repeatable}\n              {...control}\n            >\n              <FormControl\n                controls={child}\n                data={data.value}\n                is_from_repeatable={props.is_from_repeatable}\n                is_view={props.is_view}\n              />\n            </Row>\n          );\n        } else if (control.tag == \"col\") {\n          return <Col\n            key={id}\n            {...control}\n          >\n            <FormControl\n              controls={child}\n              data={data.value}\n              is_from_repeatable={props.is_from_repeatable}\n              is_view={props.is_view}\n            />\n          </Col>\n        } else if ([\"input\", \"mobile\", \"input-inline\"].includes(control.tag)) {\n          return (\n            <Input\n              key={id}\n              data={data.value}\n              is_view={props.is_view}\n              is_from_repeatable={props.is_from_repeatable}\n              {...control}\n            />\n          );\n        } else if (control.tag == \"check\") {\n          return (\n            <InputCheck\n              key={id}\n              data={data.value}\n              is_view={props.is_view}\n              is_from_repeatable={props.is_from_repeatable}\n              {...control}\n            />\n          );\n        } else if (control.tag == \"textarea\") {\n          return (\n            <Textarea\n              key={id}\n              data={data.value}\n              is_view={props.is_view}\n              is_from_repeatable={props.is_from_repeatable}\n              {...control}\n            />\n          );\n        } else if (control.tag == \"label\") {\n          return <Label key={id} label={control.label} name={control.name} />;\n        } else if ([\"select\", \"select-inline\"].includes(control.tag)) {\n          // console.log(control.name, data.value);\n          return (\n            <Select\n              key={id}\n              data={data.value}\n              is_view={props.is_view}\n              is_from_repeatable={props.is_from_repeatable}\n              {...control}\n            />\n            // <></>\n          );\n        } else if (control.tag == \"datalist\") {\n          return (\n            <Datalist\n              key={id}\n              data={data.value}\n              is_view={props.is_view}\n              is_from_repeatable={props.is_from_repeatable}\n              {...control}\n            />\n          );\n        } else if (control.tag == \"checkbox\") {\n          return (\n            <CheckboxGroup\n              key={id}\n              data={data.value}\n              is_view={props.is_view}\n              is_from_repeatable={props.is_from_repeatable}\n              {...control}\n            />\n          );\n        } else if (control.tag == \"radio\") {\n          return (\n            <RadioGroup\n              key={id}\n              data={data.value}\n              is_view={props.is_view}\n              is_from_repeatable={props.is_from_repeatable}\n              {...control}\n            />\n          );\n        } else if (control.tag == \"repeatable\") {\n\n          return (\n            <Repeatable\n              key={id}\n              data={data.value}\n              is_view={props.is_view}\n              is_from_repeatable={props.is_from_repeatable}\n              {...control}\n            />\n          );\n        } else {\n          return <></>;\n        }\n      })}\n    </>\n  );\n}\n", "import { h } from \"preact\";\nimport { EventSubscriptionItemType, FormControlType, SubscribeItemType } from \"../../types\";\nimport useValue from \"../hooks/value\";\nimport useName from \"../hooks/name\";\nimport useIsView from \"../hooks/is-view\";\nimport useTrigger from \"../hooks/trigger\";\nimport useSubscribe from \"../hooks/subscribe\";\nimport { useEffect, useMemo, useRef } from \"preact/hooks\";\nimport useCache from \"../hooks/cache\";\nimport useData from \"../hooks/data\";\n\nconst Input = (props: {\n  name?: string;\n  type: FormControlType;\n  label?: string;\n  placeholder: string;\n  value?: any;\n  validator?: string;\n  width?: string;\n  readonly?: boolean;\n  disabled?: boolean;\n  is_view?: boolean;\n  tag?: string;\n  data?: any;\n  event?: {\n    trigger?: string[];\n    subscribe?: SubscribeItemType[];\n  };\n  cache?: boolean;\n}) => {\n  const inputRef = useRef(null);\n  const { value } = useValue(props.value);\n  const { name } = useName(props.name);\n  const { isView } = useIsView(props.is_view);\n  const { data } = useData(props.data);\n  \n\n  useTrigger(props?.event?.trigger, name.value, value.value);\n\n  const {cacheValue} = useCache(props.cache, name.value, value.value,name.value);\n\n  const { value:macroValue } = useSubscribe(props?.event?.subscribe, name.value,cacheValue.value);\n  \n  useMemo(()=>{\n    value.value = macroValue.value;\n    // console.log(\"macroValue\",name.value,macroValue.value)\n  },[macroValue.value])\n\n  const onInput = (e) => (value.value = e.currentTarget.value);\n\n  useEffect(()=>{\n\n    const observer = new MutationObserver( (mutationList, observer) => {\n      for (const mutation of mutationList) {\n        if (mutation.type === \"attributes\") {\n          if(mutation.attributeName === \"value\"){\n            value.value = mutation.target.getAttribute(\"value\");\n            observer.disconnect();\n          }\n        }\n      }\n    });\n\n    observer.observe(inputRef.current,{\n      attributes: true, childList: false, subtree: false\n    })\n\n    return ()=>{\n      observer.disconnect();\n    }\n  },[value.value])\n\n  useEffect(() => {\n    if (data.value[name.value] == undefined){\n      value.value = null;\n    } else {\n      value.value = data.value[name.value];\n    }\n  }, [data.value, name.value]);\n\n  return (\n    <div class=\"form-group\">\n      {props.label && (\n        <label class=\"form-label\" for={name.value}>\n          {props.label}\n        </label>\n      )}\n      <input\n        ref={inputRef}\n        data-name={name.value}\n        data-tag={props.tag}\n        onInput={onInput}\n        value={value.value}\n        class=\"form-control\"\n        type={props.type}\n        placeholder={props.placeholder || \"\"}\n        id={name.value}\n        {...(isView.value ? { } : { name: name.value })}\n        {...(props.readonly || isView.value ? { readonly: true } : {})}\n        {...(props.disabled ? { disabled: true } : {})}\n        {...(props.validator ? { \"data-validator\": props.validator } : {})}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n", "import { useSignal } from \"@preact/signals\";\nimport { useEffect } from \"preact/hooks\";\n\n\nexport default function useValue(value) {\n    const v = useSignal(null);\n\n    useEffect(() => {\n        if (value == undefined) return;\n        v.value = value;\n    }, [value]);\n\n\n    return { value: v };\n}", "import { useSignal } from \"@preact/signals\";\nimport { useEffect } from \"preact/hooks\";\nimport { isFalsy } from \"../utils\";\n\n\nexport default function useName(value) {\n    const v = useSignal(null);\n\n    useEffect(() => {\n        if (isFalsy(value)) return;\n        v.value = value;\n    }, [value]);\n\n\n    return { name: v };\n}", "import RecursiveIterator from \"recursive-iterator\";\nimport caches from \"./caches\";\nimport singleton from \"./singleton\";\n\nexport const generateIndex = () => {\n  let index = singleton<number>(\"_index\",0);\n  return index++;\n};\n\nexport const mergeTo = (value, obj) => {\n  if (isFalsy(value)) {\n    return {};\n  }\n\n  return obj || {};\n};\n\nexport function isFalsy(val, len?) {\n  if (!val) {\n    return true;\n  }\n  const isNumber = val.constructor.name == \"Number\";\n  const isString = val.constructor.name == \"String\";\n\n  if (isNumber) {\n    return !val;\n  } else if (isString) {\n    if (len) {\n      return val == \"undefined\" || val == \"null\" || val.length <= len;\n    }\n\n    if (val == \"false\") {\n      return true;\n    }\n    return val == \"undefined\" || val == \"null\";\n  }\n  return false;\n}\n\nexport const cloneObj = (ctx) => {\n  if (!ctx) return ctx;\n  try {\n    if (typeof ctx == \"string\") {\n      return JSON.parse(ctx);\n    } else {\n      return JSON.parse(JSON.stringify(ctx));\n    }\n  } catch (e) { }\n\n  return ctx;\n};\n\nexport const parseUpdateData = (ctx) => {\n  if (!ctx) {\n    return {};\n  }\n\n  const parsedUpdate = cloneObj(ctx);\n  return Object.keys(parsedUpdate).reduce((accu, key) => {\n    accu[key] = cloneObj(parsedUpdate[key]);\n\n    return accu;\n  }, {});\n};\n\nexport const restructureControls = (data, update?) => {\n  update = parseUpdateData(update);\n\n  data = cloneObj(data);\n\n  // console.log(63, data, update);\n\n  return data\n    .filter((item) => item)\n    .map((item) => {\n      item.id = generateIndex();\n      if (item.properties && typeof item.properties == \"string\") {\n        item.properties = cloneObj(item.properties);\n      }\n\n      if (item.variants && typeof item.variants == \"string\") {\n        item.variants = cloneObj(item.variants);\n      }\n\n      if (item.children && typeof item.children == \"string\") {\n        item.children = cloneObj(item.children);\n      }\n\n      if (item.options && typeof item.options == \"string\") {\n        item.options = cloneObj(item.options);\n      }\n\n      item.properties &&\n        item.properties.forEach(({ key, value }) => {\n          item[key] = value;\n        });\n\n\n      if (update && update[item.name]) {\n        item.value = update[item.name]?.value || update[item.name];\n      }\n\n\n      return item;\n    });\n};\n\nexport const isMobile = {\n  Android: function () {\n    return navigator.userAgent.match(/Android/i);\n  },\n  BlackBerry: function () {\n    return navigator.userAgent.match(/BlackBerry/i);\n  },\n  iOS: function () {\n    return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n  },\n  Opera: function () {\n    return navigator.userAgent.match(/Opera Mini/i);\n  },\n  Windows: function () {\n    return (\n      navigator.userAgent.match(/IEMobile/i) ||\n      navigator.userAgent.match(/WPDesktop/i)\n    );\n  },\n  any: function () {\n    return (\n      isMobile.Android() ||\n      isMobile.BlackBerry() ||\n      isMobile.iOS() ||\n      isMobile.Opera() ||\n      isMobile.Windows() ||\n      []\n    );\n  },\n};\n\nexport const getWindowWidth = () => {\n  const [mobileType] = isMobile.any();\n\n  return mobileType ? window.screen.width : window.innerWidth;\n};\n\nexport const sanitize = (str) =>\n  decodeURIComponent(String(str).replace(/<.*>/, \"\"));\nexport const getControlValue = (control) => {\n  let value = sanitize(control[\"value\"]);\n  if (control[\"type\"] == \"checkbox\") {\n    if (!control[\"checked\"]) {\n      value = null;\n    }\n  } else if (control[\"type\"] == \"file\") {\n    value = control[\"files\"][0];\n  }\n\n  return value;\n};\n\nexport function getFormData<T>(\n  form: HTMLFormElement,\n  opts?: {\n    trim?: boolean;\n    json?: boolean;\n    is_sanitize?: boolean;\n    key?: \"name\" | \"data-name\";\n  }\n): T {\n  const o = {\n    trim: false,\n    json: true,\n    key: \"name\",\n  };\n  if (opts && opts.trim != undefined) {\n    o.trim = opts.trim;\n  }\n\n  if (opts && opts.json != undefined) {\n    o.json = opts.json;\n  }\n\n  if (opts && opts.key != undefined) {\n    o.key = opts.key;\n  }\n\n  const formData = new FormData(form);\n  const data: any = {};\n  const isTrim = o.trim;\n\n  Array.from(form.elements).forEach((item: any) => {\n    const value =\n      opts?.is_sanitize == undefined || opts?.is_sanitize\n        ? sanitize(item[\"value\"])\n        : item[\"value\"];\n\n    let name = item[\"name\"];\n\n    if (o.key == \"data-name\") {\n      name = item.dataset.name;\n    }\n    if (name) {\n      if (item[\"type\"] == \"checkbox\") {\n        item[\"checked\"] && (data[name] = item[\"checked\"]);\n      } else if (item[\"type\"] == \"file\") {\n        console.log(item[\"files\"]);\n        data[name] = item[\"files\"][0];\n      } else if (isTrim && value != \"\") {\n        data[name] = value;\n      } else if (!isTrim) {\n        data[name] = value;\n      }\n    }\n  });\n\n  delete data.PreventChromeAutocomplete;\n\n  if (o.json == false) {\n    Object.keys(data).forEach((key) => {\n      if (!formData.has(key)) {\n        formData.append(key, data[key]);\n      }\n    });\n\n    return formData as T;\n  }\n\n  return data as T;\n}\n\nexport const generateUniqueId = () => crypto.randomUUID();\n\nexport const createOptions = (arr, selectedValue) => {\n  return cloneObj(arr).map((item) => {\n    if (selectedValue && item.value == selectedValue) {\n      item.selected = true;\n    }\n\n    item.id = generateIndex();\n\n\n    return item;\n  });\n};\n\nexport const loopItem = (array, callback?) => {\n  for (const { node, path } of new RecursiveIterator(array)) {\n    // if ([\"boolean\", \"number\", \"string\"].includes(typeof node)) {\n\n    // }\n    callback(path, node);\n  }\n};\n\nexport const filterObj = (obj, exclude) => {\n  return Object.keys(obj).reduce((accu, key) => {\n    if (!exclude.includes(key)) {\n      accu[key] = obj[key];\n    }\n    return accu;\n  }, {});\n};\n\n\nexport const selectSize = (dic, size) => {\n  let v = null;\n  const keys = Object.keys(dic).sort((a, b) => Number(a) > Number(b) ? 1 : -1);\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = Number(key);\n    if (size <= value) {\n      v = dic[key];\n      break;\n    }\n    if (keys.length - 1 === i) {\n      v = dic[key];\n    }\n  }\n\n  return v;\n};\n\n\nconst toBool = (test, a, b) => {\n  switch (test) {\n    case 'eq': {\n      return a == b;\n    };\n    case 'ne': {\n      return a != b;\n    };\n    case 'gt': {\n      return a > b;\n    };\n    case 'lt': {\n      return a < b;\n    };\n    case 'gte': {\n      return a >= b;\n    };\n    case 'lte': {\n      return a <= b;\n    };\n    case 'in': {\n      return a.includes(b);\n    };\n    case 'notIn': {\n      return !a.includes(b);\n    };\n    case 'truthy': {\n      const test = !!b || b == \"0\";\n      // console.log(test, b, !!b, b == \"0\")\n      return test;\n    }\n    case 'contains': {\n      return a.includes(b);\n    };\n    case 'notContains': {\n      return !a.includes(b);\n    }\n    case 'startsWith': {\n      return a.startsWith(b);\n    }\n    case 'endsWith': {\n      return a.endsWith(b);\n    }\n    case \"any\": {\n      return true;\n    }\n    default: {\n      throw new Error(`Invalid test type - ${test}`);\n    }\n  }\n}\n\nexport const getVariant = (variants, payload) => {\n  if (!variants || !variants.length) return;\n\n\n  const testCtx = (target, ctx) => {\n\n    let exp = {} as any;\n    if (['string', 'number', 'boolean'].includes(typeof target)) {\n      exp.eq = target;\n    } else if (typeof target == 'object') {\n      exp = Object.assign(exp, target);\n    };\n    const [[key, value]] = Object.entries(exp);\n\n    // console.log(399, target, key, value, ctx);\n\n\n    return toBool(key, value, ctx);\n  }\n\n  const variant = variants.filter((item) => {\n    const { test, data } = item?.fn || {};\n\n    let t = false;\n    if (typeof test == 'boolean') {\n      t = test;\n    } else if (typeof test == 'object') {\n\n      const testItem = (test)=>Object.keys(test).every((key) => {\n        if(key.includes(\"caches.\")){\n          //\"caches.business_unit_id.value\"\n          //\"caches.business_unit_id.name\"\n          //\"caches.business_unit_id.text\"\n          const [a,b,c] = key.split(\".\");\n          const parent = caches().get(b);\n          \n          if(!parent){\n            return false;\n          }\n          return testCtx(test[key], parent.get(c));\n        } else {\n          return testCtx(test[key], payload[key]);\n        }\n      });\n\n      if(Array.isArray(test)){\n        t = test.every(item=>testItem(item));\n      } else {\n        t = testItem(test);\n      }\n    }\n\n    return t;\n  });\n\n  return variant;\n}\n\nexport const replace = (str, obj) => {\n  str = decodeURIComponent(str);\n\n  return str.replace(/{(.*?)}/g, (match, key) => {\n    return obj[key] !== undefined ? obj[key] : \"\";\n  });\n}\n\nexport const fetchOptions = (url, map) => {\n  return fetch(url)\n    .then(async (resp) => {\n      if (resp.ok) {\n        let json = await resp.json();\n        json = json.map((item) => {\n          return map.reduce((accu, iter) => {\n            const [targetKey, key] = iter;\n\n            accu[key] = item[targetKey];\n\n            return accu;\n          }, {});\n        });\n\n\n        return json;\n      }\n    })\n    .catch((err) => { console.log(err); return [] });\n};\n\nexport const reviveData = (data) => {\n  try {\n    if (!data) {\n      return {};\n    }\n    if (typeof data == \"string\") {\n      return JSON.parse(data);\n    }\n    return data;\n  } catch (err) {\n    return {};\n  }\n}\n\nexport function Stack(array, callback) {\n  const l = array.length;\n  let index = 0;\n  const cache = [];\n\n  function recurse(callback, rej, res) {\n    if (index < l) {\n      const item = array[index];\n      callback(item, index)\n        .then((result) => {\n          index += 1;\n          cache.push(result);\n          recurse(callback, rej, res);\n        })\n        .catch((err) => {\n          rej(err);\n        });\n    } else {\n      res(cache);\n    }\n  }\n\n  return new Promise((res, rej) => {\n    try {\n      recurse(callback, rej, res);\n    } catch (err) {\n      rej(err);\n    }\n  });\n}\n\n", "\n\nexport default function singleton<T>(key, value){\n    if(!window[key]){\n        window[key] = value;\n    }\n    return window[key] as T;    \n}", "import singleton from \"./singleton\";\n\n\nexport class CacheData {\n    cache: Map<string, any>;\n    constructor() {\n      this.cache = new Map;\n    }\n    set(key, value) {\n      // console.log(\"set\", key, value);\n      this.cache.set(key, value);\n    }\n    get(key) {\n      // console.log(\"get\", key);\n      return this.cache.get(key);\n    }\n    delete(key) {\n      this.cache.delete(key);\n    }\n    has(key){\n      return this.cache.has(key);\n    }\n    clear() {\n      // console.log(\"cleared\");\n      this.cache.clear();\n    }\n}\n\nexport default function caches():CacheData{\n    const cacheName = \"_caches\";\n    return singleton<CacheData>(cacheName, new CacheData());\n}", "import { useSignal } from \"@preact/signals\";\nimport { useEffect } from \"preact/hooks\";\n\n\nexport default function useIsView(value) {\n    const v = useSignal(false);\n\n    useEffect(() => {\n        v.value = value || false;\n    }, [value]);\n\n\n    return { isView: v };\n}", "import { useEffect } from \"preact/hooks\";\nimport { isFalsy } from \"../utils\";\nimport { FORM_CHANGE_EVENT } from \"../const\";\nimport { pubSignal } from \"../signals\";\n\n\nexport default function useTrigger(config, name, value) {\n\n\n    useEffect(() => {\n        if (isFalsy(config)) return;\n        if (isFalsy(name)) return;\n        if (isFalsy(value)) return;\n\n        if (!config.length) {\n            return console.error(`trigger config of ${name} must be an array`);\n        }\n\n\n\n        config.forEach((event) => {\n\n            pubSignal.value = { value: value, name: name, event };\n\n            // document.dispatchEvent(\n            //     new CustomEvent(FORM_CHANGE_EVENT, {\n            //         detail: { value: value, name: name, event },\n            //     })\n            // );\n        })\n\n\n    }, [config, name, value]);\n\n\n}", "import { signal } from \"@preact/signals\";\n\nexport const submitSignal = signal(null);\n\n\nexport const pubSignal = signal({\n    value:null,\n    name:null,\n    event:null,\n})\n", "import { useEffect } from \"preact/hooks\";\nimport { EventSubscriptionItemType, SubscribeItemType, SubscribeOptions, SubscribeValue } from \"../../types\";\nimport { useSignal } from \"@preact/signals\";\nimport { createOptions, fetchOptions, isFalsy, replace } from \"../utils\";\nimport caches from \"../utils/caches\";\nimport pubsub from \"../utils/pubsub\";\nimport { pubSignal } from \"../signals\";\n\nexport default function useSubscribe(config, controlName,v?) {\n\n    const options = useSignal(null);\n    const isLoading = useSignal(false);\n    const value = useSignal(null);\n    const type = useSignal(null);\n\n    useEffect(() => {\n        if (isFalsy(config)) return;\n        if (isFalsy(controlName)) return;\n        if (isLoading.value) return;\n\n        const {name,event} = pubSignal.value;\n\n\n\n        config.forEach((subscribe: SubscribeItemType) => {\n            const { change, config } = subscribe;\n            \n\n            type.value = change;\n            if(change == \"value\"){\n                const _config = config as SubscribeValue;\n                const {fields, macro} = _config;\n\n                if (fields) {\n                    if (macro == \"sum\") {\n                        value.value = fields.reduce((accu, field)=>{\n                            if(caches().has(field)){\n                                const val =  caches().get(field).get(\"value\");\n                                accu += parseInt(val) || 0;\n                            }\n\n\n                            return accu \n                        },0)\n                    }\n                }\n            }else if(change == \"options\"){\n                const _config = config as SubscribeOptions;\n                const {options: localOptions, option_api} = _config;\n                const value = pubSignal.value;\n\n                if (option_api) {\n                    const { url, cache, map } = option_api;\n                    if (!url) return;\n                    const data: any = {\n                        value, name,\n                    };\n\n                    if (cache) {\n                        cache.forEach(c => {\n                            !isFalsy(caches().get(c)) && (data[c] = caches().get(c).get(\"value\"));\n                        })\n                    };\n\n                    const replacedUrl = replace(url, data);\n                    isLoading.value = true;\n                    fetchOptions(replacedUrl, map)\n                        .then(res => {\n                            isLoading.value = false;\n                            if (!Array.isArray(res)) throw new Error('Invalid response, options should be an array of ({label:string, value:string})[]');\n                            options.value = createOptions(res, value);\n                        }).catch(err => isLoading.value = false);\n                } else if (localOptions?.length) {\n                    options.value = createOptions(localOptions, value);\n                }\n            }\n\n\n        })\n\n        return () => {\n            config.forEach((subscribe: EventSubscriptionItemType) => {\n                pubsub().clean(subscribe.event);\n            })\n        }\n\n    }, [config, controlName,v,pubSignal.value]);\n\n    return { options, isLoading, value, type };\n}", "import singleton from \"./singleton\";\n\nclass PubSub {\n    callbacks: object;\n    constructor() {\n      this.callbacks = {}\n    }\n    /**\n     * \n     * @param key - ensures that the subscriber has a unique handler for the event \n     * @param event - subscriber event\n     * @param handler - subscriber handler to event \n     */\n    register(key, event: string, handler: (a: any) => void) {\n      if (!this.callbacks[key]) {\n        this.callbacks[key] = {};\n      }\n      this.callbacks[key][event] = handler;\n    }\n    /**\n     * @param event - event to broadcast\n     * @param payload - data to broadcast\n     */\n    broadcast(event, payload) {\n      //it compiles all handlers in a event;\n      const callbacks = Object.keys(this.callbacks).reduce((accu, key) => {\n        const config = this.callbacks[key];\n        if (config[event]) {\n          accu.push(config[event]);\n        }\n        return accu;\n      }, []);\n  \n      if (callbacks && callbacks.length) {\n        callbacks.forEach(callback => {\n          callback(payload);\n        })\n      }\n    }\n  \n    clean(id) {\n      delete this.callbacks[id];\n    }\n}\n\nexport default function pubsub(){\n    const cacheName = \"_pubsub\";\n    return singleton<PubSub>(cacheName, new PubSub());\n}", "import { useEffect } from \"preact/hooks\";\nimport { isFalsy } from \"../utils\";\nimport caches from \"../utils/caches\";\nimport { useSignal } from \"@preact/signals\";\n\n\nexport default function useCache(cache, name, value,text) {\n\n    const t = useSignal(new Map);\n\n\n\n    useEffect(() => {\n        if (isFalsy(cache)) return;\n        if(name == null) return;\n\n        const data = new Map;\n        data.set(\"name\",name);\n        data.set(\"value\",value);\n        data.set(\"text\",text);\n        caches().set(name, data);\n\n        t.value = data;\n\n\n        return () => {\n            // caches().delete(name);\n            // console.log(\"cache deleted\",name);\n            t.value = null;\n        }\n\n    }, [cache, name, value,text]);\n\n    return {cacheValue:t}\n}", "import { useSignal } from \"@preact/signals\";\nimport { useEffect } from \"preact/hooks\";\nimport { reviveData } from \"../utils\";\n\n\nexport default function useData(propsData, def?: any) {\n    const data = useSignal(def || {});\n\n    useEffect(() => {\n        data.value = reviveData(propsData);\n    }, [propsData])\n\n    return { data };\n} ", "import { h } from \"preact\";\nimport { mergeTo } from \"../utils\";\nimport useValue from \"../hooks/value\";\nimport useName from \"../hooks/name\";\nimport useIsView from \"../hooks/is-view\";\n\nexport default function Textarea(props: {\n  name?: string;\n  label?: string;\n  placeholder: string;\n  validator?: string;\n  height?: string;\n  display?: string;\n  value?: string;\n  is_view?: boolean;\n  is_from_repeatable?: boolean;\n  tag?: string;\n  readonly?: boolean;\n  disabled?: boolean;\n}) {\n  const { isView } = useIsView(props.is_view);\n  const { value } = useValue(props.value);\n  const { name } = useName(props.name);\n\n  const onInput = (e) => (value.value = e.currentTarget.value);\n\n  return (\n    <div class=\"form-group\">\n      <label for={props.name} class=\"form-label \">\n        {props.display}\n      </label>\n      <textarea\n        onInput={onInput}\n        data-tag={props.tag}\n        class=\"form-control\"\n        id={name.value}\n        placeholder={props.placeholder || \"\"}\n        value={value.value}\n        {...(isView.value ? { 'data-name': name.value } : { name: name.value })}\n        {...(props.readonly || isView.value ? { readonly: true } : {})}\n        {...(props.disabled ? { disabled: true } : {})}\n        {...(props.validator ? { \"data-validator\": props.validator } : {})}\n        style={{\n          ...mergeTo(props.height, {\n            height: props.height,\n          }),\n        }}\n      />\n    </div>\n  );\n}\n", "import { h } from \"preact\";\nexport default function Label(props: { name: string; label: string }) {\n  return (\n    <label class=\"form-label\" for={props.name}>\n      {props.label}\n    </label>\n  );\n}\n", "import { useSignal } from \"@preact/signals\";\nimport { h } from \"preact\";\nimport { useEffect, useMemo, useRef } from \"preact/hooks\";\nimport FormControl from \"./form-control\";\nimport { EventSubscriptionItemType, OptionApiType } from \"../../types\";\nimport useRemoteOptions from \"../hooks/options-api\";\nimport useLocalOptions from \"../hooks/options\";\nimport useVariants from \"../hooks/variants\";\nimport useData from \"../hooks/data\";\nimport useSubscribeOptions from \"../hooks/subscribe\";\nimport useTrigger from \"../hooks/trigger\";\nimport Visible from \"./visibile\";\nimport ControlLoader from \"./control-loader\";\nimport useValue from \"../hooks/value\";\nimport useIsView from \"../hooks/is-view\";\nimport useCache from \"../hooks/cache\";\n\n\nexport default function Select(props: {\n  name?: string;\n  label: string;\n  value?: any;\n  readonly?: boolean;\n  is_view?: boolean;\n  options: any;\n  placeholder: any;\n  variants: any;\n  validator?: string;\n  tag?: string;\n  help?: any;\n  option_api?: OptionApiType;\n  width?: string;\n  event?: {\n    trigger?: string[];\n    subscribe?: EventSubscriptionItemType[];\n  };\n  data: any;\n  cache?: boolean;\n}) {\n\n\n  const { isView } = useIsView(props.is_view);\n  const options = useSignal([]);\n  const { value: selectedValue } = useValue(props.value);\n  const { value: placeholder } = useValue(props.placeholder);\n  const { value: name } = useValue(props.name);\n  const selectedText = useSignal(null);\n  const variants = useSignal([]);\n  const controlRef = useRef(null);\n  const isLoading = useSignal(false);\n  const isChanged = useSignal(false);\n\n  const { data } = useData(props.data);\n  const { options: remoteOptions, isLoading: isRemoteOptionsLoading } = useRemoteOptions(props.option_api, selectedValue.value, name.value, isChanged.value);\n  const { options: localOptions } = useLocalOptions(props.options, selectedValue.value, isChanged.value);\n  const { options: subscribeOptions, isLoading: isSubscribeOptionsLoading } = useSubscribeOptions(props?.event?.subscribe, name.value);\n  const { controls: variantControls, data: variantData, isLoading: isVariantLoading } = useVariants(props.variants, name.value, selectedValue.value, selectedText.value, props.data);\n\n  useMemo(() => {\n    if (isView.value) throw new Error(`Select component is not allowed in view mode`);\n  }, [isView.value]);\n\n  useMemo(() => {\n    const opts = subscribeOptions.value || remoteOptions.value || localOptions.value || [];\n    if (placeholder.value) {\n      opts.unshift({ label: placeholder, value: null });\n    }\n    options.value = opts;\n  }, [remoteOptions.value, localOptions.value, subscribeOptions.value]);\n\n\n  useMemo(() => {\n    isLoading.value = isRemoteOptionsLoading.value || isSubscribeOptionsLoading.value || isVariantLoading.value;\n  }, [\n    isRemoteOptionsLoading.value,\n    isSubscribeOptionsLoading.value,\n    isVariantLoading.value\n  ]);\n\n  useMemo(() => {\n    data.value = { ...data.value, ...variantData.value };\n    variants.value = variantControls.value;\n\n    // console.log(86, name.value, selectedValue.value, variantControls.value)\n\n    // console.log(86, data.value);\n    // console.log(87, variants.value);\n\n\n  }, [variantControls.value, variantData.value]);\n\n  useTrigger(props?.event?.trigger, name.value, selectedValue.value);\n\n  useCache(props.cache, name.value, selectedValue.value,selectedText.value);\n\n  useEffect(() => {\n    if (data.value[name.value] == undefined){\n      selectedValue.value = null;\n    } else {\n      selectedValue.value = data.value[name.value];\n    }\n  }, [data.value, name.value]);\n\n  const changeHandler = async (e) => {\n    const target = e.target;\n    if (!target) return;\n    isChanged.value = true;\n    selectedValue.value = target.value;\n    selectedText.value = Array.from(target.selectedOptions).reduce((accu, iter: HTMLOptionElement, index) => accu + iter.text + (target.selectedOptions.length - 1 == index ? \"\" : ','), '');\n  };\n\n  return (\n    <div\n      class={`form-group control-select ${props.help ? \"has-help\" : \"\"} mb-3`}\n      style={{ width: props.width }}\n    >\n      <label for={name.value} class=\"form-label fs-12 roboto-regular\">\n        {props.label}\n      </label>\n\n      <ControlLoader when={isLoading.value}>\n        <select\n          ref={controlRef}\n          data-tag={props.tag}\n          value={selectedValue.value}\n          onChange={changeHandler}\n          class=\"form-select form-control\"\n          aria-label=\"Default select example\"\n          data-name={name.value}\n          {...(props.validator ? { \"data-validator\": props.validator } : {})}\n          {...(props.readonly ? { disabled: true } : {})}\n        >\n          {options.value.map((item, index) => {\n            if (item.selected) {\n              return (\n                <option key={item.id} value={item.value} selected>\n                  {item.label}\n                </option>\n              );\n            }\n            return <option key={item.id} value={item.value}>{item.label}</option>;\n          })}\n        </select>\n\n      </ControlLoader>\n\n      <input\n        type=\"hidden\"\n        id={name.value}\n        name={name.value}\n        value={selectedValue.value}\n      />\n\n      <Visible when={variants.value.length}>\n        <FormControl\n          controls={variants.value}\n          data={data.value}\n        />\n      </Visible>\n\n    </div>\n  );\n}\n", "import { useSignal } from \"@preact/signals\";\nimport { useEffect } from \"preact/hooks\";\nimport { createOptions, fetchOptions, isFalsy, mergeTo, replace } from \"../utils\";\nimport caches from \"../utils/caches\";\n\n\n\nexport default function useRemoteOptions(config, selectedValue, name, isChanged) {\n    const options = useSignal(null);\n    const isLoading = useSignal(false);\n    useEffect(() => {\n        if (isChanged) return;\n        if (isFalsy(config)) return;\n        if (isFalsy(config?.url)) return;\n        if (!config?.url) return;\n        if (isLoading.value) return;\n        if (!name) return;\n\n\n        isLoading.value = true;\n\n        const { url, map, cache } = config;\n        const data: any = { [name]: selectedValue, value: selectedValue };\n\n\n        name && (data.name = name);\n\n        if (cache) {\n            cache.forEach(c => {\n                !isFalsy(caches().get(c)) && (data[c] = caches().get(c).get(\"value\"));\n            })\n        };\n\n        const replacedUrl = replace(url, data);\n\n        fetchOptions(replacedUrl, map)\n            .then(res => {\n                isLoading.value = false;\n                if (!Array.isArray(res)) throw new Error('Invalid response, options should be an array of ({label:string, value:string})[]');\n\n\n                options.value = createOptions(res, selectedValue);\n\n            }).catch(err => isLoading.value = false);\n\n\n\n    }, [config, selectedValue, isChanged, name]);\n\n    return { options, isLoading };\n}", "import { useSignal } from \"@preact/signals\";\nimport { useEffect } from \"preact/hooks\";\nimport { createOptions } from \"../utils\";\n\n\n\nexport default function useLocalOptions(opts, selectedValue, isChanged) {\n    const options = useSignal(null);\n    useEffect(() => {\n        if (isChanged) return;\n        if (!opts?.length) return;\n        options.value = createOptions(opts, selectedValue);\n    }, [opts, selectedValue, isChanged]);\n    return { options };\n}", "import { useSignal } from \"@preact/signals\";\nimport { useEffect } from \"preact/hooks\";\nimport { getVariant, isFalsy, replace, restructureControls, reviveData, Stack } from \"../utils\";\n\n\nexport default function useVariants(config, name, value, text, initialData) {\n    const controls = useSignal([]);\n    const data = useSignal({});\n    const isLoading = useSignal(false);\n\n    useEffect(() => {\n        if (!config) return;\n        if (!name) return;\n        // if (isFalsy(value)) return;\n        if (isLoading.value) return;\n\n\n        ; (async () => {\n            const selected = getVariant(config, { name, value, text });\n            let currentData = { value, name, text, [name]: value };\n            if (!selected.length) {\n                controls.value = [];\n                data.value = {};\n                return;\n            };\n\n\n            const reviveInitialData = reviveData(initialData);\n\n\n            let updateData = { ...reviveInitialData, ...data.value };\n\n            isLoading.value = true;\n\n            const dataConfigs = selected.map(({ fn }) => fn?.data || []);\n            const remoteDataConfigs = dataConfigs.filter(({ type }) => type == 'api');\n            const localDataConfigs = dataConfigs.filter(({ type }) => type == 'local' || type != 'api');\n\n            localDataConfigs.length && localDataConfigs.forEach(({ data: localData }) => {\n                updateData = { ...updateData, ...localData };\n            });\n\n            await Stack(remoteDataConfigs, async ({ url }) => {\n                const replacedUrl = replace(url, currentData);\n                if (!replacedUrl) return\n                return fetch(replacedUrl)\n                    .then(res => res.ok && res.json())\n                    .then(remoteData => {\n                        if (!remoteData) return;\n                        if (remoteData.constructor !== Object) return;\n                        updateData = { ...updateData, ...remoteData };\n                    })\n                    .catch(err => { console.log(err) });\n            });\n\n\n            const selectedControls = selected.reduce((accu, item) => {\n                if (!item?.controls) return accu;\n                if (!Array.isArray(item.controls)) return accu;\n                return accu.concat(item.controls);\n            }, []);\n\n            controls.value = restructureControls(selectedControls, data.value);\n            data.value = updateData;\n\n\n            isLoading.value = false;\n\n        })();\n\n    }, [config, name, value, initialData]);\n\n    return {\n        data, controls, isLoading\n    }\n} ", "import { useMemo } from \"preact/hooks\";\nimport { isFalsy } from \"../utils\";\n\n\nexport default function Visible({ children, when }) {\n    const isVisible = useMemo(() => !isFalsy(when), [when]);\n\n    return isVisible ? children : null;\n}", "import { h } from 'preact';\nimport Visible from './visibile';\nimport { useMemo } from 'preact/hooks';\nimport { isFalsy } from '../utils';\n\n\nexport default function ControlLoader({ children, when }) {\n    const isLoading = useMemo(() => !isFalsy(when), [when]);\n\n    return <div style={{\n        display: 'grid',\n        gridAutoFlow: 'column',\n        gridTemplateColumns: '1fr max-content',\n        alignContent: 'center',\n        alignItems: 'center',\n        gridGap: '4px'\n    }}>\n\n        {children}\n\n        <Visible when={isLoading}>\n            <div>\n                <div class=\"spinner-border text-secondary spinner-border-sm\" role=\"status\">\n                    <span class=\"visually-hidden\"></span>\n                </div>\n            </div>\n        </Visible>\n    </div>\n} ", "import { useSignal } from \"@preact/signals\";\nimport { h } from \"preact\";\nimport {\n  isFalsy,\n} from \"../utils\";\nimport { useEffect, useMemo, useRef } from \"preact/hooks\";\nimport FormControl from \"./form-control\";\nimport { EventSubscriptionItemType, OptionApiType } from \"../../types\";\nimport useRemoteOptions from \"../hooks/options-api\";\nimport useLocalOptions from \"../hooks/options\";\nimport useVariants from \"../hooks/variants\";\nimport useData from \"../hooks/data\";\nimport useSubscribe from \"../hooks/subscribe\";\nimport useTrigger from \"../hooks/trigger\";\nimport Visible from \"./visibile\";\nimport ControlLoader from \"./control-loader\";\nimport useValue from \"../hooks/value\";\nimport useName from \"../hooks/name\";\nimport useIsView from \"../hooks/is-view\";\n\n\nexport default function DataList(props: {\n  name?: string;\n  label: string;\n  value?: any;\n  readonly?: boolean;\n  is_view?: boolean;\n  options: any;\n  placeholder: any;\n  variants: any;\n  validator?: string;\n  tag?: string;\n  help?: any;\n  option_api?: OptionApiType;\n  width?: string;\n  event?: {\n    trigger?: string[];\n    subscribe?: EventSubscriptionItemType[];\n  };\n  data: any;\n}) {\n  const { isView } = useIsView(props.is_view);\n  const options = useSignal([]);\n  const { value } = useValue(props.value);\n  const { value: name } = useValue(props.name);\n  const variants = useSignal([]);\n  const isLoading = useSignal(false);\n  const isChanged = useSignal(false);\n  const { data } = useData(props.data);\n  const { options: remoteOptions, isLoading: isRemoteOptionsLoading } = useRemoteOptions(props.option_api, value.value, name.value, isChanged.value);\n  const { options: localOptions } = useLocalOptions(props.options, value.value, isChanged.value);\n  const { options: subscribeOptions, isLoading: isSubscribeOptionsLoading, value:macroValue } = useSubscribe(props?.event?.subscribe, name.value);\n  const { controls: variantControls, data: variantData, isLoading: isVariantLoading } = useVariants(props.variants, name.value, value.value, value.value, props.data);\n\n  useMemo(() => {\n    if (isView.value) throw new Error(`Select component is not allowed in view mode`);\n  }, [isView.value]);\n\n  useMemo(() => {\n    options.value = subscribeOptions.value || remoteOptions.value || localOptions.value || [];\n  }, [remoteOptions.value, localOptions.value, subscribeOptions.value]);\n\n  useMemo(() => {\n    isLoading.value = isRemoteOptionsLoading.value || isSubscribeOptionsLoading.value || isVariantLoading.value;\n  }, [\n    isRemoteOptionsLoading.value,\n    isSubscribeOptionsLoading.value,\n    isVariantLoading.value\n  ]);\n\n  useMemo(() => {\n    data.value = { ...data.value, ...variantData.value };\n    variants.value = variantControls.value;\n  }, [variantControls.value, variantData.value]);\n\n  useTrigger(props?.event?.trigger, name.value, value.value);\n\n\n  useEffect(() => {\n    if (data.value[name.value] == undefined) return;\n    value.value = data.value[name.value];\n  }, [data.value, name.value]);\n\n\n  useEffect(() => {\n    /**\n     * this scenario is usually when in view mode,\n     * instead of datalist, input should be used\n     */\n    if (props.readonly == true) {\n      throw new Error('datalist cannot be readonly, use input instead');\n    }\n  }, [])\n\n  const changeHandler = async (e) => {\n    const target = e.target;\n    if (!target) return;\n    isChanged.value = true;\n    value.value = target.value;\n  };\n\n  return (\n    <div\n      class={`form-group  ${props.help ? \"has-help\" : \"\"} mb-3`}\n      style={{ width: props.width }}\n    >\n      <label for={name.value} class=\"form-label fs-12 roboto-regular\">\n        {props.label}\n      </label>\n\n      <ControlLoader when={isLoading.value}>\n        <input\n          data-tag={props.tag}\n          class=\"form-control\"\n          id={name.value}\n          name={name.value}\n          placeholder={props.placeholder || \"\"}\n          value={value.value}\n          list={`${name.value}s`}\n          {...(props.validator ? { \"data-validator\": props.validator } : {})}\n          onChange={changeHandler}\n        />\n        <datalist id={`${name.value}s`}>\n          {options.value.map((item) => (\n            <option\n              value={item.value}\n              key={String(item.value).split(\" \").join(\"\")}\n            />\n          ))}\n        </datalist>\n\n      </ControlLoader>\n\n      <Visible when={variants.value.length}>\n        <FormControl\n          controls={variants.value}\n          data={data.value}\n        />\n      </Visible>\n\n    </div>\n  );\n}\n", "import { h, Fragment } from \"preact\";\nimport { getControlValue, restructureControls } from \"../utils\";\nimport FormControl from \"./form-control\";\nimport { useSignal } from \"@preact/signals\";\nimport Visible from \"./visibile\";\n\nexport default function CheckboxGroup(props: {\n  name?: string;\n  label: string;\n  value?: string | number;\n  options: any;\n  placeholder: any;\n  variants: any;\n  validator?: string;\n  help?: any;\n  option_api?: {\n    url: string;\n    map: any;\n  };\n  width?: string;\n  event?: {\n    trigger?: string[];\n    subscribe?: string[];\n  };\n  tag?: string;\n}) {\n  const variants = useSignal({});\n\n  const changeHandler = (e) => {\n    const value = getControlValue(e.target);\n\n    const id = String(e.target.value).toLowerCase().replaceAll(\" \", \"-\");\n\n    if (!value) {\n      variants[id] = [];\n      return;\n    }\n\n    const variantConfig: any = props.variants.find(\n      (item) => item.ref_name == e.target.name\n    );\n\n    variants[id] = restructureControls(variantConfig?.controls?.data || []);\n  };\n  return (\n    <div class=\"checkbox-group-container\">\n      <label class=\"\">{props.label}</label>\n      {props.options.map((item) => {\n        const id = String(item.value).toLowerCase().replaceAll(\" \", \"-\");\n\n        return (\n          <div class=\"checkbox-group-item form-group\">\n            <div class=\"form-check form-switch\">\n              <input\n                data-tag={props.tag}\n                onChange={changeHandler}\n                type=\"checkbox\"\n                value={item.value}\n                id={id}\n                name={props.name}\n                class=\"form-check-input\"\n              />\n              <label for={id} class=\"form-check-label\">\n                {item.label}\n              </label>\n            </div>\n\n            <Visible when={(variants[id] || []).length}>\n              <FormControl controls={variants[id]} />\n            </Visible>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n", "import { h, Fragment } from \"preact\";\nimport { getControlValue, restructureControls } from \"../utils\";\nimport FormControl from \"./form-control\";\nimport { useSignal, useSignalEffect } from \"@preact/signals\";\nimport Visible from \"./visibile\";\n\nexport default function RadioGroup(props: {\n  name?: string;\n  label: string;\n  value?: string | number;\n  options: any;\n  placeholder: any;\n  variants: any;\n  validator?: string;\n  help?: any;\n  orientation?: any;\n  option_api?: {\n    url: string;\n    map: any;\n  };\n  width?: string;\n  tag?: string;\n  event?: {\n    trigger?: string[];\n    subscribe?: string[];\n  };\n  is_view?: boolean;\n  data: any;\n}) {\n  const currentId = useSignal(null);\n  const variants = useSignal({});\n  const orientation = useSignal(props.orientation || \"vertical\");\n  const options = useSignal(props.options || []);\n\n  const changeHandler = (e) => {\n    const value = getControlValue(e.target);\n    const key = `${e.target.name} - ${value}`;\n\n\n\n    const id = String(e.target.value).toLowerCase().replaceAll(\" \", \"-\");\n    const variantConfig: any = props.variants.find((item) => {\n      return item.ref_name == key;\n    });\n\n\n    if (!variantConfig) {\n      return;\n    }\n    variants[currentId.value] = [];\n\n    currentId.value = id;\n\n    const controls = restructureControls(variantConfig?.controls || []);\n\n    options.value = options.value.map((item) => {\n      if (item.value == value) {\n        item.controls = controls;\n      } else {\n        item.controls = [];\n      }\n      return item\n    });\n  };\n\n\n\n\n  return (\n    <div class=\"radio-container form-group\" style={{ width: props.width }}>\n      <label>{props.label}</label>\n      <div class={`radio-item-container ${orientation.value}`}>\n        {options.value.map((item) => {\n          const id = String(item.value).toLowerCase().replaceAll(\" \", \"-\");\n\n          return (\n            <div class=\"radio-item form-group\">\n              <div>\n                <input\n                  type=\"radio\"\n                  value={item.value}\n                  id={id}\n                  {...(props[\"data-name\"]\n                    ? { \"data-name\": props[\"data-name\"] }\n                    : { name: props.name })}\n                  onChange={changeHandler}\n                  data-tag={props.tag}\n                />\n                <label for={id}>{item.label}</label>\n              </div>\n\n              <Visible when={item?.controls?.length}>\n                <FormControl controls={item.controls} data={props.data} />\n              </Visible>\n\n\n            </div>\n          );\n        })}\n      </div>\n    </div >\n  );\n}\n", "import { h, Fragment } from \"preact\";\nimport { useEffect, useRef } from \"preact/hooks\";\nimport { useSignal, useSignalEffect } from \"@preact/signals\";\nimport {\n  filterObj,\n  generateUniqueId,\n  getFormData,\n  restructureControls,\n} from \"../utils\";\nimport FormControl from \"./form-control\";\nimport { submitSignal } from \"../signals\";\n\nexport default function Repeatable(props: {\n  name?: string;\n  label: string;\n  value?: string | number;\n  options: any;\n  placeholder: any;\n  variants: any;\n  is_view?: boolean;\n  validator?: string;\n  help?: any;\n  option_api?: {\n    url: string;\n    map: any;\n  };\n  width?: string;\n  event?: {\n    trigger?: string[];\n    subscribe?: string[];\n  };\n  values?: any[];\n  children: any[];\n  orientation: string;\n  tag?: string;\n  is_from_repeatable?: boolean;\n  data: any;\n}) {\n  const uniqueId = useSignal(generateUniqueId());\n  const datas = useSignal([]);\n\n  const viewDatas = useSignal([]);\n  const formRef = useRef<any>(null);\n  const formControls = useSignal(props?.children || []);\n  useEffect(() => {\n    const values: any = (props?.data || {})[props.name];\n\n    if (values?.length) {\n      /**\n       * for some reason, it is not re-rendering if the values is assigned to datas.value;\n       * that is why viewDatas.value is used, to trigger re-rendering\n       */\n\n      viewDatas.value = values.map((value) => restructureControls(value));\n\n      console.log(\"repeatable receives values\");\n    }\n  }, [props.data]);\n\n  useEffect(() => {\n    if (!submitSignal?.value?.id) {\n      return;\n    }\n    /**\n     * get children repeatable\n     * and empty it upon submission\n     */\n\n    const target = document.getElementById(submitSignal?.value?.id);\n\n    if (!target) {\n      return;\n    }\n\n    const container = target.closest(\".repeatable-content\");\n    if (!container) {\n      return;\n    }\n\n    const repeatableTarget = container.querySelectorAll(\n      \"[data-type=repeatable]\"\n    );\n\n    Array.from(repeatableTarget).forEach((form: HTMLFormElement) => {\n      if (\n        form.name != submitSignal.value.id &&\n        uniqueId.value != submitSignal.value.id\n      ) {\n        datas.value = [];\n      }\n    });\n  }, [submitSignal.value]);\n\n  const deleteHandler = (e) => {\n    const target = e.target;\n    const key = target.dataset.key;\n    const id = target.dataset.id;\n\n    datas.value = datas.value.reduce((accu, item, index) => {\n      if (id != index) {\n        accu.push(item);\n      }\n\n      return accu;\n    }, []);\n\n    viewDatas.value = datas.value;\n  };\n\n  const addHandler = (e) => {\n    e.preventDefault();\n    const data = getFormData(formRef.current, {\n      key: \"data-name\",\n    });\n\n    const reConstructControls = restructureControls(formControls.value);\n\n    const controls = Object.keys(data).reduce((accu, key) => {\n      let value = data[key];\n      try {\n        value = JSON.parse(value);\n      } catch (err) {}\n\n      accu[key] = value;\n\n      return accu;\n    }, {});\n\n    datas.value = [...datas.value, controls];\n    viewDatas.value = datas.value.map((item) => {\n      const controls = [];\n      reConstructControls.forEach((control) => {\n        controls.push({\n          ...control,\n          value: item[control.name],\n        });\n      });\n\n      return controls;\n    });\n\n    formRef.current.reset();\n\n    submitSignal.value = { id: uniqueId.value };\n  };\n\n  return (\n    <div class=\"repeatable-container card my-3\">\n      <div class=\"repeatable-content card-body\">\n        <fieldset>\n          <legend>{props.label}</legend>\n\n          {viewDatas.value.map((item, index) => {\n            const value = item.reduce((accu, iter) => {\n              accu[iter.name] = iter.value;\n              return accu;\n            }, {});\n            console.log(\"rendering datas.value\");\n\n            return (\n              <details>\n                <summary>{`${props.label} - ${index + 1}`}</summary>\n                <div>\n                  <FormControl\n                    controls={item}\n                    data={value}\n                    key={`values-${generateUniqueId()}`}\n                    is_from_repeatable={true}\n                    is_view={true}\n                  />\n                  <br />\n                  <button\n                    type=\"button\"\n                    onClick={deleteHandler}\n                    data-id={index}\n                    class=\"btn btn-danger\"\n                  >\n                    Remove\n                  </button>\n                  <div style=\"height:50px\"></div>\n                </div>\n              </details>\n            );\n          })}\n\n          {!props.is_view && (\n            <details>\n              <summary>{props.label} Form</summary>\n              <form\n                onSubmit={addHandler}\n                ref={formRef}\n                name={uniqueId.value}\n                id={uniqueId.value}\n                data-type=\"repeatable\"\n              >\n                <FormControl\n                  controls={formControls.value}\n                  key=\"form-values\"\n                  is_from_repeatable={true}\n                />\n                <br />\n                <button type=\"reset\" class=\"btn btn-warning\">\n                  Reset\n                </button>\n                &nbsp;\n                <button type=\"submit\" class=\"btn btn-success\">\n                  Submit\n                </button>\n              </form>\n              <input\n                type=\"hidden\"\n                id={props.name}\n                {...(props.is_from_repeatable\n                  ? { \"data-name\": props.name }\n                  : { name: props.name })}\n                value={JSON.stringify(datas.value)}\n                data-tag={props.tag}\n              />\n            </details>\n          )}\n          {props.is_view && !viewDatas.value.length ? (\n            <details>\n              <summary>empty</summary>\n            </details>\n          ) : (\n            <></>\n          )}\n        </fieldset>\n      </div>\n    </div>\n  );\n}\n", "import { useSignal } from \"@preact/signals\";\nimport { h, Fragment } from \"preact\";\nimport { FormControlType } from \"../../types\";\nimport { useMemo, useRef } from \"preact/hooks\";\nimport FormControl from \"./form-control\";\nimport useVariants from \"../hooks/variants\";\nimport useData from \"../hooks/data\";\nimport Visible from \"./visibile\";\nimport useIsView from \"../hooks/is-view\";\nimport useName from \"../hooks/name\";\n\nconst InputCheck = (props: {\n  name?: string;\n  type: FormControlType;\n  label?: string;\n  placeholder: string;\n  value?: boolean;\n  validator?: string;\n  width?: string;\n  readonly?: boolean;\n  disabled?: boolean;\n  is_view?: boolean;\n  tag?: string;\n  variants: any;\n  data: any;\n}) => {\n  const { isView } = useIsView(props.is_view);\n  const value = useSignal(false);\n  const inputRef = useRef(null);\n  const { data } = useData(props.data);\n  const { name } = useName(props.name);\n  const variants = useSignal([]);\n\n  useMemo(() => {\n\n    if (!(props.value == true || props.value == false)) return;\n    value.value = props.value;\n\n  }, [props.value]);\n\n  const { controls: variantControls, data: variantData } = useVariants(props.variants, props.name, value.value, value.value, props.data);\n\n  useMemo(() => {\n    data.value = variantData.value;\n    variants.value = variantControls.value;\n  }, [variantControls.value, variantData.value]);\n\n\n  const onInput = (e) => {\n    const checked = e.currentTarget.checked;\n    value.value = checked;\n  };\n\n  return (\n    <div class=\" my-3\">\n      <div class=\"form-check\">\n        <input\n          ref={inputRef}\n          data-tag={props.tag}\n          onInput={onInput}\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          id={name.value}\n          placeholder={props.placeholder || \"\"}\n          {...(isView.value ? { 'data-name': name.value } : { name: name.value })}\n          {...(props.readonly || isView.value ? { readonly: true } : {})}\n          {...(props.disabled ? { disabled: true } : {})}\n          {...(props.validator ? { \"data-validator\": props.validator } : {})}\n        />\n\n        {props.label && (\n          <>\n            &nbsp;\n            <label class=\"form-check-label\" for={name.value}>\n              {props.label}\n            </label>\n          </>\n        )}\n      </div>\n\n      <Visible when={variants.value.length}>\n        <FormControl\n          controls={variantControls.value}\n          data={props.data}\n        />\n      </Visible>\n    </div>\n  );\n};\n\nexport default InputCheck;\n", "import { h, Fragment } from \"preact\";\nimport { useRef } from \"preact/hooks\";\n\nexport default function FormGroup(props: {\n  col?: number;\n  classes?: string;\n  label?: string;\n  name?: string;\n  responsive?: { [key: string]: number };\n  children: any;\n}) {\n  return (\n    <div\n      class={`\n        form-control-item form-col-${props.col || 1}} \n        ${props.classes ?? \"\"} \n      `}\n    >\n      {props.label ? <p class=\"\">{props.label}</p> : <></>}\n      <div class=\"form-group-controls\" >\n        {props.children}\n      </div>\n    </div>\n  );\n}\n", "import { h, Fragment } from \"preact\";\nimport { useEffect, useMemo, useRef } from \"preact/hooks\";\nimport { getWindowWidth, selectSize } from \"../utils\";\nimport { useSignal } from \"@preact/signals\";\nimport pubsub from \"../utils/pubsub\";\n\n\n\nexport default function Row(props: {\n  col?: number;\n  classes?: string;\n  label?: string;\n  name?: string;\n  responsive?: { [key: string]: number };\n  children: any;\n}) {\n  const responsive = useMemo(() => {\n    return props.responsive;\n  }, [props.responsive])\n\n  const id = useSignal(window.crypto.randomUUID());\n  const containerRef = useRef(null);\n  const prevBreak = useSignal(\"\");\n  const hasBreak = useSignal(false);\n\n  const applyBreaks = (target, breaks, windowWidth) => {\n    if (!target) return;\n    const w = selectSize(breaks, windowWidth);\n    let current = `form-cols-${w}`;\n    if (prevBreak.value != current) {\n      prevBreak.value && target.classList.remove(prevBreak.value);\n      target.classList.add(current);\n      prevBreak.value = current\n    } else {\n      if (!target.classList.contains(current)) {\n        target.classList.add(current);\n      }\n    };\n  }\n\n\n\n  useEffect(() => {\n\n    if (responsive && containerRef.current) {\n      const windowWidth = getWindowWidth();\n\n      const { breaks, width } = responsive;\n\n      if (breaks) {\n        hasBreak.value = true;\n        applyBreaks(containerRef.current, breaks, windowWidth);\n        pubsub().register(id.value, \"def\", ({ windowWidth }) => {\n          applyBreaks(containerRef.current, breaks, windowWidth);\n\n        });\n      }\n\n\n    }\n\n    return () => {\n      pubsub().clean(id.value);\n    }\n\n  }, []);\n\n\n  return (\n    <div\n      class={`\n        form-row\n        ${props.classes ?? \"\"} \n      `}\n      ref={containerRef}\n    >\n      {props.label ? <p class=\"\">{props.label}</p> : <></>}\n      <div class=\"form-cols\" >\n        {props.children}\n      </div>\n    </div>\n  );\n}\n", "import { h, Fragment } from \"preact\";\nimport { useEffect, useMemo, useRef } from \"preact/hooks\";\nimport { getWindowWidth, selectSize } from \"../utils\";\nimport { useSignal } from \"@preact/signals\";\nimport pubsub from \"../utils/pubsub\";\n\n\n\n\nexport default function Col(props: {\n  col?: number;\n  classes?: string;\n  label?: string;\n  name?: string;\n  responsive?: { [key: string]: number };\n  children: any;\n}) {\n  const responsive = useMemo(() => {\n    return props.responsive;\n  }, [props.responsive])\n  const id = useSignal(window.crypto.randomUUID());\n  const containerRef = useRef(null);\n  const prevWidth = useSignal(\"\");\n\n\n\n  const applyWidth = (target, widths, windowWidth) => {\n    if (!target) return;\n    const w = selectSize(widths, windowWidth);\n    if (prevWidth.value != w) {\n      target.style.width = w;\n      prevWidth.value = w\n    } else {\n      if (!target.classList.contains(w)) {\n        target.style.width = w;\n      }\n    };\n  }\n\n\n\n  useEffect(() => {\n    if (responsive && containerRef.current) {\n      const windowWidth = getWindowWidth();\n\n      const { breaks, width } = responsive;\n\n\n      if (width) {\n        applyWidth(containerRef.current, width, windowWidth);\n        pubsub().register(id.value, \"def\", ({ windowWidth }) => {\n          applyWidth(containerRef.current, width, windowWidth);\n        });\n      }\n\n\n\n    }\n\n    return () => {\n      pubsub().clean(id.value);\n    }\n\n  }, []);\n\n\n  return (\n    <div\n      class={`\n        form-col form-col-${props.col || 1} \n        ${props.classes ?? \"\"} \n      `}\n      ref={containerRef}\n    >\n      {props.label ? <p class=\"\">{props.label}</p> : <></>}\n\n\n      <div class=\"form-col-item\">\n        {props.children}\n      </div>\n    </div>\n  );\n}\n", "import { useSignal } from \"@preact/signals\";\nimport { useEffect } from \"preact/hooks\";\nimport { isFalsy, restructureControls } from \"../utils\";\nimport useData from \"./data\";\n\n\n\nexport default function useControls(controls, data) {\n    const { data: controlsData } = useData(controls, []);\n    const ctrls = useSignal([]);\n\n\n    useEffect(() => {\n        if (isFalsy(controlsData.value?.length)) return;\n        ctrls.value = restructureControls(controlsData, data).map(\n            (control) => {\n                if ([\"group\", \"row\", \"col\"].includes(control.tag)) {\n                    const controls = restructureControls(\n                        control.children.map((item) => {\n                            return item;\n                        }),\n                        data\n                    );\n                    return {\n                        control,\n                        child: controls,\n                    };\n                } else {\n                    return { control };\n                }\n            }\n        );\n\n    }, [controlsData.value, data]);\n\n\n    return {\n        controls: ctrls,\n    }\n\n}", "import singleton from \"./singleton\";\n\nclass InstanceCount {\n    _count: number;\n    constructor() {\n      this._count = 0;\n    }\n    get count() {\n      return this._count;\n    }\n    increment() {\n      this._count += 1;\n    }\n    decrement() {\n      this._count -= 1;\n    }\n}\n\n\nexport default function instanceCount():InstanceCount{\n    const instanceCountName = \"_instanceCount\";\n    return singleton<InstanceCount>(instanceCountName, new InstanceCount());\n}\n", "import { h } from \"preact\";\nimport { FormControlItemType } from \"../../types\";\nimport FormControl from \"./form-control\";\nimport { useMemo } from \"preact/hooks\";\n\nconst controlInputKey: FormControlItemType = {\n  id: 1,\n  tag: \"input\",\n  label: \"Key\",\n  properties: [\n    {\n      key: \"type\",\n      value: \"text\",\n    },\n    {\n      key: \"placeholder\",\n      value: \"key\",\n    },\n    {\n      key: \"name\",\n      value: \"key\",\n    },\n  ],\n};\n\nconst controlInputValue: FormControlItemType = {\n  id: 1,\n  tag: \"input\",\n  label: \"Value\",\n  properties: [\n    {\n      key: \"type\",\n      value: \"value\",\n    },\n    {\n      key: \"placeholder\",\n      value: \"value\",\n    },\n    {\n      key: \"name\",\n      value: \"value\",\n    },\n  ],\n};\n\nconst controlOptionApi: FormControlItemType = {\n  id: 1,\n  tag: \"input\",\n  label: \"Option API\",\n  properties: [\n    {\n      key: \"type\",\n      value: \"text\",\n    },\n    {\n      key: \"name\",\n      value: \"option_api\",\n    },\n    {\n      key: \"placeholder\",\n      value: \"option api\",\n    },\n  ],\n};\nconst controlOptionDefault: FormControlItemType = {\n  id: 1,\n  tag: \"repeatable\",\n  label: \"Options\",\n  properties: [\n    {\n      key: \"type\",\n      value: \"text\",\n    },\n    {\n      key: \"name\",\n      value: \"options\",\n    },\n    {\n      key: \"placeholder\",\n      value: \"options\",\n    },\n  ],\n  children: [\n    {\n      id: 1,\n      tag: \"input\",\n      label: \"Label\",\n      properties: [\n        {\n          key: \"type\",\n          value: \"text\",\n        },\n        {\n          key: \"name\",\n          value: \"label\",\n        },\n        {\n          key: \"placeholder\",\n          value: \"label\",\n        },\n      ],\n    },\n    {\n      id: 1,\n      tag: \"input\",\n      label: \"Value\",\n      properties: [\n        {\n          key: \"type\",\n          value: \"text\",\n        },\n        {\n          key: \"name\",\n          value: \"value\",\n        },\n        {\n          key: \"placeholder\",\n          value: \"value\",\n        },\n      ],\n    },\n    {\n      id: 1,\n      tag: \"check\",\n      label: \"Is Selected\",\n      properties: [\n        {\n          key: \"type\",\n          value: \"checkbox\",\n        },\n        {\n          key: \"name\",\n          value: \"selected\",\n        },\n      ],\n    },\n  ],\n};\n\nconst selectOptionType: FormControlItemType = {\n  id: 1,\n  tag: \"select\",\n  label: \"Option Type\",\n  properties: [\n    {\n      key: \"name\",\n      value: \"option_type\",\n    },\n  ],\n  options: [\n    {\n      id: 1,\n      label: \"Default\",\n      value: \"default\",\n    },\n    {\n      id: 1,\n      label: \"Api\",\n      value: \"api\",\n    },\n  ],\n  variants: [\n    {\n      check_fn_str: \"function (value){return value == 'default'}\",\n      ref_name: \"option_type - default\",\n      controls: [controlOptionDefault],\n    },\n    {\n      ref_name: \"option_type - api\",\n      controls: [controlOptionApi],\n    },\n  ],\n};\n\nconst orientationOption: FormControlItemType = {\n  id: 4,\n  tag: \"select\",\n  label: \"Orientation\",\n  properties: [\n    {\n      key: \"type\",\n      value: \"text\",\n    },\n    {\n      key: \"name\",\n      value: \"orientation\",\n    },\n  ],\n  options: [\n    {\n      id: 1,\n      label: \"Portrait\",\n      value: \"portrait\",\n    },\n    {\n      id: 2,\n      label: \"Lanscape\",\n      value: \"landscape\",\n    },\n  ],\n};\n\nconst controls: FormControlItemType[] = [\n  {\n    id: 1,\n    tag: \"select\",\n    label: \"Tag\",\n    properties: [\n      {\n        key: \"type\",\n        value: \"text\",\n      },\n      {\n        key: \"name\",\n        value: \"tag\",\n      },\n    ],\n    options: [\n      {\n        id: 1,\n        label: \"Select\",\n        value: \"select\",\n      },\n      {\n        id: 2,\n        label: \"Input\",\n        value: \"input\",\n      },\n      {\n        id: 3,\n        label: \"Checkbox\",\n        value: \"checkbox\",\n      },\n      {\n        id: 4,\n        label: \"Radio\",\n        value: \"radio\",\n      },\n      {\n        id: 5,\n        label: \"Datalist\",\n        value: \"datalist\",\n      },\n      {\n        id: 6,\n        label: \"Textarea\",\n        value: \"textarea\",\n      },\n      {\n        id: 7,\n        label: \"Label\",\n        value: \"label\",\n      },\n      {\n        id: 8,\n        label: \"Repeatable\",\n        value: \"repeatable\",\n      },\n      {\n        id: 9,\n        label: \"Group\",\n        value: \"group\",\n      },\n      {\n        id: 10,\n        label: \"Check\",\n        value: \"check\",\n      },\n    ],\n    variants: [\n      {\n        check_fn_str: \"function (value){return value == 'select'}\",\n        ref_name: \"tag - select\",\n        controls: [selectOptionType],\n      },\n      {\n        check_fn_str:\n          \"function (value){return ['checkbox','radio','group'].includes(value)}\",\n        ref_name: \"tag - radio\",\n        controls: [orientationOption],\n      },\n    ],\n  },\n  {\n    id: 2,\n    tag: \"input\",\n    label: \"Label\",\n    properties: [\n      {\n        key: \"placeholder\",\n        value: \"label\",\n      },\n      {\n        key: \"type\",\n        value: \"text\",\n      },\n      {\n        key: \"name\",\n        value: \"label\",\n      },\n    ],\n  },\n  {\n    id: 3,\n    tag: \"repeatable\",\n    label: \"Properties\",\n    properties: [\n      {\n        key: \"type\",\n        value: \"text\",\n      },\n      {\n        key: \"name\",\n        value: \"properties\",\n      },\n    ],\n    children: [controlInputKey, controlInputValue],\n  },\n];\n\nconst variantControl: FormControlItemType = {\n  id: 3,\n  tag: \"repeatable\",\n  label: \"Variants\",\n  properties: [\n    {\n      key: \"type\",\n      value: \"text\",\n    },\n    {\n      key: \"name\",\n      value: \"variants\",\n    },\n  ],\n  children: [\n    {\n      id: 1,\n      tag: \"input\",\n      label: \"Check Function\",\n      properties: [\n        {\n          key: \"type\",\n          value: \"text\",\n        },\n        {\n          key: \"placeholder\",\n          value: \"check function\",\n        },\n        {\n          key: \"name\",\n          value: \"check_fn_str\",\n        },\n      ],\n    },\n    {\n      id: 1,\n      tag: \"input\",\n      label: \"Ref Name\",\n      properties: [\n        {\n          key: \"type\",\n          value: \"text\",\n        },\n        {\n          key: \"placeholder\",\n          value: \"ref name\",\n        },\n        {\n          key: \"name\",\n          value: \"ref_name\",\n        },\n      ],\n    },\n    {\n      id: 3,\n      tag: \"repeatable\",\n      label: \"Controls\",\n      properties: [\n        {\n          key: \"type\",\n          value: \"text\",\n        },\n        {\n          key: \"name\",\n          value: \"controls\",\n        },\n      ],\n      children: controls,\n    },\n  ],\n};\n\nconst allControls = [...controls, variantControl];\n\nexport default function Form(props: { data: any }) {\n  const formControls = useMemo(() => {\n    return allControls;\n  }, [props.data]);\n\n  return (\n    <form>\n      <FormControl controls={formControls} data={props.data} />\n      <button type=\"submit\" class=\"btn btn-success\">\n        Submit\n      </button>\n    </form>\n  );\n}\n", "export const FORM_CHANGE_EVENT = 'form-value-change';", "\nexport default function walker(array, callback){\n    return array.map(item=>{\n        const {children} = item;\n        if(children){\n            return {\n                ...item,\n                children:children.map(child=>{\n                    const {variants} = child;\n                    if(variants){\n                        return variants.map(variant=>{\n                            const {controls} = variant;\n                            if(controls){\n                                return {\n                                    ...variant,\n                                    controls:controls.map(control=>{\n                                        return callback(control);\n                                    })\n                                }\n                            }\n                            return variant;\n                        })\n                    }\n                    return child\n                })\n            }\n        };\n        return callback(item);\n    })\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,qCAAqB;;;ACArB,MAAAA,kBAA4B;;;ACA5B,sBAAkB;;;ACAlB,uBAA0B;AAC1B,qBAA0B;AAGX,WAAR,SAA0B,OAAO;AACpC,UAAM,QAAI,0BAAU,IAAI;AAExB,gCAAU,MAAM;AACZ,UAAI,SAAS,OAAW;AACxB,QAAE,QAAQ;AAAA,IACd,GAAG,CAAC,KAAK,CAAC;AAGV,WAAO,EAAE,OAAO,EAAE;AAAA,EACtB;;;ACdA,MAAAC,kBAA0B;AAC1B,MAAAC,gBAA0B;;;ACD1B,kCAA8B;;;ACEf,WAAR,UAA8B,KAAK,OAAM;AAC5C,QAAG,CAAC,OAAO,GAAG,GAAE;AACZ,aAAO,GAAG,IAAI;AAAA,IAClB;AACA,WAAO,OAAO,GAAG;AAAA,EACrB;;;ACJO,MAAM,YAAN,MAAgB;AAAA,IAEnB,cAAc;AACZ,WAAK,QAAQ,oBAAI;AAAA,IACnB;AAAA,IACA,IAAI,KAAK,OAAO;AAEd,WAAK,MAAM,IAAI,KAAK,KAAK;AAAA,IAC3B;AAAA,IACA,IAAI,KAAK;AAEP,aAAO,KAAK,MAAM,IAAI,GAAG;AAAA,IAC3B;AAAA,IACA,OAAO,KAAK;AACV,WAAK,MAAM,OAAO,GAAG;AAAA,IACvB;AAAA,IACA,IAAI,KAAI;AACN,aAAO,KAAK,MAAM,IAAI,GAAG;AAAA,IAC3B;AAAA,IACA,QAAQ;AAEN,WAAK,MAAM,MAAM;AAAA,IACnB;AAAA,EACJ;AAEe,WAAR,SAAmC;AACtC,UAAM,YAAY;AAClB,WAAO,UAAqB,WAAW,IAAI,UAAU,CAAC;AAAA,EAC1D;;;AF3BO,MAAM,gBAAgB,MAAM;AACjC,QAAI,QAAQ,UAAkB,UAAS,CAAC;AACxC,WAAO;AAAA,EACT;AAEO,MAAM,UAAU,CAAC,OAAO,QAAQ;AACrC,QAAI,QAAQ,KAAK,GAAG;AAClB,aAAO,CAAC;AAAA,IACV;AAEA,WAAO,OAAO,CAAC;AAAA,EACjB;AAEO,WAAS,QAAQ,KAAK,KAAM;AACjC,QAAI,CAAC,KAAK;AACR,aAAO;AAAA,IACT;AACA,UAAM,WAAW,IAAI,YAAY,QAAQ;AACzC,UAAM,WAAW,IAAI,YAAY,QAAQ;AAEzC,QAAI,UAAU;AACZ,aAAO,CAAC;AAAA,IACV,WAAW,UAAU;AACnB,UAAI,KAAK;AACP,eAAO,OAAO,eAAe,OAAO,UAAU,IAAI,UAAU;AAAA,MAC9D;AAEA,UAAI,OAAO,SAAS;AAClB,eAAO;AAAA,MACT;AACA,aAAO,OAAO,eAAe,OAAO;AAAA,IACtC;AACA,WAAO;AAAA,EACT;AAEO,MAAM,WAAW,CAAC,QAAQ;AAC/B,QAAI,CAAC,IAAK,QAAO;AACjB,QAAI;AACF,UAAI,OAAO,OAAO,UAAU;AAC1B,eAAO,KAAK,MAAM,GAAG;AAAA,MACvB,OAAO;AACL,eAAO,KAAK,MAAM,KAAK,UAAU,GAAG,CAAC;AAAA,MACvC;AAAA,IACF,SAAS,GAAG;AAAA,IAAE;AAEd,WAAO;AAAA,EACT;AAEO,MAAM,kBAAkB,CAAC,QAAQ;AACtC,QAAI,CAAC,KAAK;AACR,aAAO,CAAC;AAAA,IACV;AAEA,UAAM,eAAe,SAAS,GAAG;AACjC,WAAO,OAAO,KAAK,YAAY,EAAE,OAAO,CAAC,MAAM,QAAQ;AACrD,WAAK,GAAG,IAAI,SAAS,aAAa,GAAG,CAAC;AAEtC,aAAO;AAAA,IACT,GAAG,CAAC,CAAC;AAAA,EACP;AAEO,MAAM,sBAAsB,CAAC,MAAM,WAAY;AACpD,aAAS,gBAAgB,MAAM;AAE/B,WAAO,SAAS,IAAI;AAIpB,WAAO,KACJ,OAAO,CAAC,SAAS,IAAI,EACrB,IAAI,CAAC,SAAS;AACb,WAAK,KAAK,cAAc;AACxB,UAAI,KAAK,cAAc,OAAO,KAAK,cAAc,UAAU;AACzD,aAAK,aAAa,SAAS,KAAK,UAAU;AAAA,MAC5C;AAEA,UAAI,KAAK,YAAY,OAAO,KAAK,YAAY,UAAU;AACrD,aAAK,WAAW,SAAS,KAAK,QAAQ;AAAA,MACxC;AAEA,UAAI,KAAK,YAAY,OAAO,KAAK,YAAY,UAAU;AACrD,aAAK,WAAW,SAAS,KAAK,QAAQ;AAAA,MACxC;AAEA,UAAI,KAAK,WAAW,OAAO,KAAK,WAAW,UAAU;AACnD,aAAK,UAAU,SAAS,KAAK,OAAO;AAAA,MACtC;AAEA,WAAK,cACH,KAAK,WAAW,QAAQ,CAAC,EAAE,KAAK,MAAM,MAAM;AAC1C,aAAK,GAAG,IAAI;AAAA,MACd,CAAC;AAGH,UAAI,UAAU,OAAO,KAAK,IAAI,GAAG;AAC/B,aAAK,QAAQ,OAAO,KAAK,IAAI,GAAG,SAAS,OAAO,KAAK,IAAI;AAAA,MAC3D;AAGA,aAAO;AAAA,IACT,CAAC;AAAA,EACL;AAEO,MAAM,WAAW;AAAA,IACtB,SAAS,WAAY;AACnB,aAAO,UAAU,UAAU,MAAM,UAAU;AAAA,IAC7C;AAAA,IACA,YAAY,WAAY;AACtB,aAAO,UAAU,UAAU,MAAM,aAAa;AAAA,IAChD;AAAA,IACA,KAAK,WAAY;AACf,aAAO,UAAU,UAAU,MAAM,mBAAmB;AAAA,IACtD;AAAA,IACA,OAAO,WAAY;AACjB,aAAO,UAAU,UAAU,MAAM,aAAa;AAAA,IAChD;AAAA,IACA,SAAS,WAAY;AACnB,aACE,UAAU,UAAU,MAAM,WAAW,KACrC,UAAU,UAAU,MAAM,YAAY;AAAA,IAE1C;AAAA,IACA,KAAK,WAAY;AACf,aACE,SAAS,QAAQ,KACjB,SAAS,WAAW,KACpB,SAAS,IAAI,KACb,SAAS,MAAM,KACf,SAAS,QAAQ,KACjB,CAAC;AAAA,IAEL;AAAA,EACF;AAEO,MAAM,iBAAiB,MAAM;AAClC,UAAM,CAAC,UAAU,IAAI,SAAS,IAAI;AAElC,WAAO,aAAa,OAAO,OAAO,QAAQ,OAAO;AAAA,EACnD;AAEO,MAAM,WAAW,CAAC,QACvB,mBAAmB,OAAO,GAAG,EAAE,QAAQ,QAAQ,EAAE,CAAC;AAC7C,MAAM,kBAAkB,CAAC,YAAY;AAC1C,QAAI,QAAQ,SAAS,QAAQ,OAAO,CAAC;AACrC,QAAI,QAAQ,MAAM,KAAK,YAAY;AACjC,UAAI,CAAC,QAAQ,SAAS,GAAG;AACvB,gBAAQ;AAAA,MACV;AAAA,IACF,WAAW,QAAQ,MAAM,KAAK,QAAQ;AACpC,cAAQ,QAAQ,OAAO,EAAE,CAAC;AAAA,IAC5B;AAEA,WAAO;AAAA,EACT;AAEO,WAAS,YACd,MACA,MAMG;AACH,UAAM,IAAI;AAAA,MACR,MAAM;AAAA,MACN,MAAM;AAAA,MACN,KAAK;AAAA,IACP;AACA,QAAI,QAAQ,KAAK,QAAQ,QAAW;AAClC,QAAE,OAAO,KAAK;AAAA,IAChB;AAEA,QAAI,QAAQ,KAAK,QAAQ,QAAW;AAClC,QAAE,OAAO,KAAK;AAAA,IAChB;AAEA,QAAI,QAAQ,KAAK,OAAO,QAAW;AACjC,QAAE,MAAM,KAAK;AAAA,IACf;AAEA,UAAM,WAAW,IAAI,SAAS,IAAI;AAClC,UAAM,OAAY,CAAC;AACnB,UAAM,SAAS,EAAE;AAEjB,UAAM,KAAK,KAAK,QAAQ,EAAE,QAAQ,CAAC,SAAc;AAC/C,YAAM,QACJ,MAAM,eAAe,UAAa,MAAM,cACpC,SAAS,KAAK,OAAO,CAAC,IACtB,KAAK,OAAO;AAElB,UAAI,OAAO,KAAK,MAAM;AAEtB,UAAI,EAAE,OAAO,aAAa;AACxB,eAAO,KAAK,QAAQ;AAAA,MACtB;AACA,UAAI,MAAM;AACR,YAAI,KAAK,MAAM,KAAK,YAAY;AAC9B,eAAK,SAAS,MAAM,KAAK,IAAI,IAAI,KAAK,SAAS;AAAA,QACjD,WAAW,KAAK,MAAM,KAAK,QAAQ;AACjC,kBAAQ,IAAI,KAAK,OAAO,CAAC;AACzB,eAAK,IAAI,IAAI,KAAK,OAAO,EAAE,CAAC;AAAA,QAC9B,WAAW,UAAU,SAAS,IAAI;AAChC,eAAK,IAAI,IAAI;AAAA,QACf,WAAW,CAAC,QAAQ;AAClB,eAAK,IAAI,IAAI;AAAA,QACf;AAAA,MACF;AAAA,IACF,CAAC;AAED,WAAO,KAAK;AAEZ,QAAI,EAAE,QAAQ,OAAO;AACnB,aAAO,KAAK,IAAI,EAAE,QAAQ,CAAC,QAAQ;AACjC,YAAI,CAAC,SAAS,IAAI,GAAG,GAAG;AACtB,mBAAS,OAAO,KAAK,KAAK,GAAG,CAAC;AAAA,QAChC;AAAA,MACF,CAAC;AAED,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAEO,MAAM,mBAAmB,MAAM,OAAO,WAAW;AAEjD,MAAM,gBAAgB,CAAC,KAAK,kBAAkB;AACnD,WAAO,SAAS,GAAG,EAAE,IAAI,CAAC,SAAS;AACjC,UAAI,iBAAiB,KAAK,SAAS,eAAe;AAChD,aAAK,WAAW;AAAA,MAClB;AAEA,WAAK,KAAK,cAAc;AAGxB,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAqBO,MAAM,aAAa,CAAC,KAAK,SAAS;AACvC,QAAI,IAAI;AACR,UAAM,OAAO,OAAO,KAAK,GAAG,EAAE,KAAK,CAAC,GAAG,MAAM,OAAO,CAAC,IAAI,OAAO,CAAC,IAAI,IAAI,EAAE;AAE3E,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,YAAM,MAAM,KAAK,CAAC;AAClB,YAAM,QAAQ,OAAO,GAAG;AACxB,UAAI,QAAQ,OAAO;AACjB,YAAI,IAAI,GAAG;AACX;AAAA,MACF;AACA,UAAI,KAAK,SAAS,MAAM,GAAG;AACzB,YAAI,IAAI,GAAG;AAAA,MACb;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAGA,MAAM,SAAS,CAAC,MAAM,GAAG,MAAM;AAC7B,YAAQ,MAAM;AAAA,MACZ,KAAK;AAAM;AACT,iBAAO,KAAK;AAAA,QACd;AAAC;AAAA,MACD,KAAK;AAAM;AACT,iBAAO,KAAK;AAAA,QACd;AAAC;AAAA,MACD,KAAK;AAAM;AACT,iBAAO,IAAI;AAAA,QACb;AAAC;AAAA,MACD,KAAK;AAAM;AACT,iBAAO,IAAI;AAAA,QACb;AAAC;AAAA,MACD,KAAK;AAAO;AACV,iBAAO,KAAK;AAAA,QACd;AAAC;AAAA,MACD,KAAK;AAAO;AACV,iBAAO,KAAK;AAAA,QACd;AAAC;AAAA,MACD,KAAK;AAAM;AACT,iBAAO,EAAE,SAAS,CAAC;AAAA,QACrB;AAAC;AAAA,MACD,KAAK;AAAS;AACZ,iBAAO,CAAC,EAAE,SAAS,CAAC;AAAA,QACtB;AAAC;AAAA,MACD,KAAK,UAAU;AACb,cAAMC,QAAO,CAAC,CAAC,KAAK,KAAK;AAEzB,eAAOA;AAAA,MACT;AAAA,MACA,KAAK;AAAY;AACf,iBAAO,EAAE,SAAS,CAAC;AAAA,QACrB;AAAC;AAAA,MACD,KAAK,eAAe;AAClB,eAAO,CAAC,EAAE,SAAS,CAAC;AAAA,MACtB;AAAA,MACA,KAAK,cAAc;AACjB,eAAO,EAAE,WAAW,CAAC;AAAA,MACvB;AAAA,MACA,KAAK,YAAY;AACf,eAAO,EAAE,SAAS,CAAC;AAAA,MACrB;AAAA,MACA,KAAK,OAAO;AACV,eAAO;AAAA,MACT;AAAA,MACA,SAAS;AACP,cAAM,IAAI,MAAM,uBAAuB,IAAI,EAAE;AAAA,MAC/C;AAAA,IACF;AAAA,EACF;AAEO,MAAM,aAAa,CAAC,UAAU,YAAY;AAC/C,QAAI,CAAC,YAAY,CAAC,SAAS,OAAQ;AAGnC,UAAM,UAAU,CAAC,QAAQ,QAAQ;AAE/B,UAAI,MAAM,CAAC;AACX,UAAI,CAAC,UAAU,UAAU,SAAS,EAAE,SAAS,OAAO,MAAM,GAAG;AAC3D,YAAI,KAAK;AAAA,MACX,WAAW,OAAO,UAAU,UAAU;AACpC,cAAM,OAAO,OAAO,KAAK,MAAM;AAAA,MACjC;AAAC;AACD,YAAM,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,OAAO,QAAQ,GAAG;AAKzC,aAAO,OAAO,KAAK,OAAO,GAAG;AAAA,IAC/B;AAEA,UAAM,UAAU,SAAS,OAAO,CAAC,SAAS;AACxC,YAAM,EAAE,MAAM,KAAK,IAAI,MAAM,MAAM,CAAC;AAEpC,UAAI,IAAI;AACR,UAAI,OAAO,QAAQ,WAAW;AAC5B,YAAI;AAAA,MACN,WAAW,OAAO,QAAQ,UAAU;AAElC,cAAM,WAAW,CAACA,UAAO,OAAO,KAAKA,KAAI,EAAE,MAAM,CAAC,QAAQ;AACxD,cAAG,IAAI,SAAS,SAAS,GAAE;AAIzB,kBAAM,CAAC,GAAE,GAAE,CAAC,IAAI,IAAI,MAAM,GAAG;AAC7B,kBAAM,SAAS,OAAO,EAAE,IAAI,CAAC;AAE7B,gBAAG,CAAC,QAAO;AACT,qBAAO;AAAA,YACT;AACA,mBAAO,QAAQA,MAAK,GAAG,GAAG,OAAO,IAAI,CAAC,CAAC;AAAA,UACzC,OAAO;AACL,mBAAO,QAAQA,MAAK,GAAG,GAAG,QAAQ,GAAG,CAAC;AAAA,UACxC;AAAA,QACF,CAAC;AAED,YAAG,MAAM,QAAQ,IAAI,GAAE;AACrB,cAAI,KAAK,MAAM,CAAAC,UAAM,SAASA,KAAI,CAAC;AAAA,QACrC,OAAO;AACL,cAAI,SAAS,IAAI;AAAA,QACnB;AAAA,MACF;AAEA,aAAO;AAAA,IACT,CAAC;AAED,WAAO;AAAA,EACT;AAEO,MAAM,UAAU,CAAC,KAAK,QAAQ;AACnC,UAAM,mBAAmB,GAAG;AAE5B,WAAO,IAAI,QAAQ,YAAY,CAAC,OAAO,QAAQ;AAC7C,aAAO,IAAI,GAAG,MAAM,SAAY,IAAI,GAAG,IAAI;AAAA,IAC7C,CAAC;AAAA,EACH;AAEO,MAAM,eAAe,CAAC,KAAK,QAAQ;AACxC,WAAO,MAAM,GAAG,EACb,KAAK,OAAO,SAAS;AACpB,UAAI,KAAK,IAAI;AACX,YAAI,OAAO,MAAM,KAAK,KAAK;AAC3B,eAAO,KAAK,IAAI,CAAC,SAAS;AACxB,iBAAO,IAAI,OAAO,CAAC,MAAM,SAAS;AAChC,kBAAM,CAAC,WAAW,GAAG,IAAI;AAEzB,iBAAK,GAAG,IAAI,KAAK,SAAS;AAE1B,mBAAO;AAAA,UACT,GAAG,CAAC,CAAC;AAAA,QACP,CAAC;AAGD,eAAO;AAAA,MACT;AAAA,IACF,CAAC,EACA,MAAM,CAAC,QAAQ;AAAE,cAAQ,IAAI,GAAG;AAAG,aAAO,CAAC;AAAA,IAAE,CAAC;AAAA,EACnD;AAEO,MAAM,aAAa,CAAC,SAAS;AAClC,QAAI;AACF,UAAI,CAAC,MAAM;AACT,eAAO,CAAC;AAAA,MACV;AACA,UAAI,OAAO,QAAQ,UAAU;AAC3B,eAAO,KAAK,MAAM,IAAI;AAAA,MACxB;AACA,aAAO;AAAA,IACT,SAAS,KAAK;AACZ,aAAO,CAAC;AAAA,IACV;AAAA,EACF;AAEO,WAAS,MAAM,OAAO,UAAU;AACrC,UAAM,IAAI,MAAM;AAChB,QAAI,QAAQ;AACZ,UAAM,QAAQ,CAAC;AAEf,aAAS,QAAQC,WAAU,KAAK,KAAK;AACnC,UAAI,QAAQ,GAAG;AACb,cAAM,OAAO,MAAM,KAAK;AACxB,QAAAA,UAAS,MAAM,KAAK,EACjB,KAAK,CAAC,WAAW;AAChB,mBAAS;AACT,gBAAM,KAAK,MAAM;AACjB,kBAAQA,WAAU,KAAK,GAAG;AAAA,QAC5B,CAAC,EACA,MAAM,CAAC,QAAQ;AACd,cAAI,GAAG;AAAA,QACT,CAAC;AAAA,MACL,OAAO;AACL,YAAI,KAAK;AAAA,MACX;AAAA,IACF;AAEA,WAAO,IAAI,QAAQ,CAAC,KAAK,QAAQ;AAC/B,UAAI;AACF,gBAAQ,UAAU,KAAK,GAAG;AAAA,MAC5B,SAAS,KAAK;AACZ,YAAI,GAAG;AAAA,MACT;AAAA,IACF,CAAC;AAAA,EACH;;;AD7ce,WAAR,QAAyB,OAAO;AACnC,UAAM,QAAI,2BAAU,IAAI;AAExB,iCAAU,MAAM;AACZ,UAAI,QAAQ,KAAK,EAAG;AACpB,QAAE,QAAQ;AAAA,IACd,GAAG,CAAC,KAAK,CAAC;AAGV,WAAO,EAAE,MAAM,EAAE;AAAA,EACrB;;;AIfA,MAAAC,kBAA0B;AAC1B,MAAAC,gBAA0B;AAGX,WAAR,UAA2B,OAAO;AACrC,UAAM,QAAI,2BAAU,KAAK;AAEzB,iCAAU,MAAM;AACZ,QAAE,QAAQ,SAAS;AAAA,IACvB,GAAG,CAAC,KAAK,CAAC;AAGV,WAAO,EAAE,QAAQ,EAAE;AAAA,EACvB;;;ACbA,MAAAC,gBAA0B;;;ACA1B,MAAAC,kBAAuB;AAEhB,MAAM,mBAAe,wBAAO,IAAI;AAGhC,MAAM,gBAAY,wBAAO;AAAA,IAC5B,OAAM;AAAA,IACN,MAAK;AAAA,IACL,OAAM;AAAA,EACV,CAAC;;;ADHc,WAAR,WAA4B,QAAQ,MAAM,OAAO;AAGpD,iCAAU,MAAM;AACZ,UAAI,QAAQ,MAAM,EAAG;AACrB,UAAI,QAAQ,IAAI,EAAG;AACnB,UAAI,QAAQ,KAAK,EAAG;AAEpB,UAAI,CAAC,OAAO,QAAQ;AAChB,eAAO,QAAQ,MAAM,qBAAqB,IAAI,mBAAmB;AAAA,MACrE;AAIA,aAAO,QAAQ,CAAC,UAAU;AAEtB,kBAAU,QAAQ,EAAE,OAAc,MAAY,MAAM;AAAA,MAOxD,CAAC;AAAA,IAGL,GAAG,CAAC,QAAQ,MAAM,KAAK,CAAC;AAAA,EAG5B;;;AEnCA,MAAAC,gBAA0B;AAE1B,MAAAC,kBAA0B;;;ACA1B,MAAM,SAAN,MAAa;AAAA,IAET,cAAc;AACZ,WAAK,YAAY,CAAC;AAAA,IACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,SAAS,KAAK,OAAe,SAA2B;AACtD,UAAI,CAAC,KAAK,UAAU,GAAG,GAAG;AACxB,aAAK,UAAU,GAAG,IAAI,CAAC;AAAA,MACzB;AACA,WAAK,UAAU,GAAG,EAAE,KAAK,IAAI;AAAA,IAC/B;AAAA;AAAA;AAAA;AAAA;AAAA,IAKA,UAAU,OAAO,SAAS;AAExB,YAAM,YAAY,OAAO,KAAK,KAAK,SAAS,EAAE,OAAO,CAAC,MAAM,QAAQ;AAClE,cAAM,SAAS,KAAK,UAAU,GAAG;AACjC,YAAI,OAAO,KAAK,GAAG;AACjB,eAAK,KAAK,OAAO,KAAK,CAAC;AAAA,QACzB;AACA,eAAO;AAAA,MACT,GAAG,CAAC,CAAC;AAEL,UAAI,aAAa,UAAU,QAAQ;AACjC,kBAAU,QAAQ,cAAY;AAC5B,mBAAS,OAAO;AAAA,QAClB,CAAC;AAAA,MACH;AAAA,IACF;AAAA,IAEA,MAAM,IAAI;AACR,aAAO,KAAK,UAAU,EAAE;AAAA,IAC1B;AAAA,EACJ;AAEe,WAAR,SAAyB;AAC5B,UAAM,YAAY;AAClB,WAAO,UAAkB,WAAW,IAAI,OAAO,CAAC;AAAA,EACpD;;;ADxCe,WAAR,aAA8B,QAAQ,aAAY,GAAI;AAEzD,UAAM,cAAU,2BAAU,IAAI;AAC9B,UAAM,gBAAY,2BAAU,KAAK;AACjC,UAAM,YAAQ,2BAAU,IAAI;AAC5B,UAAM,WAAO,2BAAU,IAAI;AAE3B,iCAAU,MAAM;AACZ,UAAI,QAAQ,MAAM,EAAG;AACrB,UAAI,QAAQ,WAAW,EAAG;AAC1B,UAAI,UAAU,MAAO;AAErB,YAAM,EAAC,MAAK,MAAK,IAAI,UAAU;AAI/B,aAAO,QAAQ,CAAC,cAAiC;AAC7C,cAAM,EAAE,QAAQ,QAAAC,QAAO,IAAI;AAG3B,aAAK,QAAQ;AACb,YAAG,UAAU,SAAQ;AACjB,gBAAM,UAAUA;AAChB,gBAAM,EAAC,QAAQ,MAAK,IAAI;AAExB,cAAI,QAAQ;AACR,gBAAI,SAAS,OAAO;AAChB,oBAAM,QAAQ,OAAO,OAAO,CAAC,MAAM,UAAQ;AACvC,oBAAG,OAAO,EAAE,IAAI,KAAK,GAAE;AACnB,wBAAM,MAAO,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,OAAO;AAC5C,0BAAQ,SAAS,GAAG,KAAK;AAAA,gBAC7B;AAGA,uBAAO;AAAA,cACX,GAAE,CAAC;AAAA,YACP;AAAA,UACJ;AAAA,QACJ,WAAS,UAAU,WAAU;AACzB,gBAAM,UAAUA;AAChB,gBAAM,EAAC,SAAS,cAAc,WAAU,IAAI;AAC5C,gBAAMC,SAAQ,UAAU;AAExB,cAAI,YAAY;AACZ,kBAAM,EAAE,KAAK,OAAO,IAAI,IAAI;AAC5B,gBAAI,CAAC,IAAK;AACV,kBAAM,OAAY;AAAA,cACd,OAAAA;AAAA,cAAO;AAAA,YACX;AAEA,gBAAI,OAAO;AACP,oBAAM,QAAQ,OAAK;AACf,iBAAC,QAAQ,OAAO,EAAE,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,OAAO;AAAA,cACvE,CAAC;AAAA,YACL;AAAC;AAED,kBAAM,cAAc,QAAQ,KAAK,IAAI;AACrC,sBAAU,QAAQ;AAClB,yBAAa,aAAa,GAAG,EACxB,KAAK,SAAO;AACT,wBAAU,QAAQ;AAClB,kBAAI,CAAC,MAAM,QAAQ,GAAG,EAAG,OAAM,IAAI,MAAM,kFAAkF;AAC3H,sBAAQ,QAAQ,cAAc,KAAKA,MAAK;AAAA,YAC5C,CAAC,EAAE,MAAM,SAAO,UAAU,QAAQ,KAAK;AAAA,UAC/C,WAAW,cAAc,QAAQ;AAC7B,oBAAQ,QAAQ,cAAc,cAAcA,MAAK;AAAA,UACrD;AAAA,QACJ;AAAA,MAGJ,CAAC;AAED,aAAO,MAAM;AACT,eAAO,QAAQ,CAAC,cAAyC;AACrD,iBAAO,EAAE,MAAM,UAAU,KAAK;AAAA,QAClC,CAAC;AAAA,MACL;AAAA,IAEJ,GAAG,CAAC,QAAQ,aAAY,GAAE,UAAU,KAAK,CAAC;AAE1C,WAAO,EAAE,SAAS,WAAW,OAAO,KAAK;AAAA,EAC7C;;;ATlFA,MAAAC,gBAA2C;;;AWP3C,MAAAC,gBAA0B;AAG1B,MAAAC,kBAA0B;AAGX,WAAR,SAA0B,OAAO,MAAM,OAAM,MAAM;AAEtD,UAAM,QAAI,2BAAU,oBAAI,KAAG;AAI3B,iCAAU,MAAM;AACZ,UAAI,QAAQ,KAAK,EAAG;AACpB,UAAG,QAAQ,KAAM;AAEjB,YAAM,OAAO,oBAAI;AACjB,WAAK,IAAI,QAAO,IAAI;AACpB,WAAK,IAAI,SAAQ,KAAK;AACtB,WAAK,IAAI,QAAO,IAAI;AACpB,aAAO,EAAE,IAAI,MAAM,IAAI;AAEvB,QAAE,QAAQ;AAGV,aAAO,MAAM;AAGT,UAAE,QAAQ;AAAA,MACd;AAAA,IAEJ,GAAG,CAAC,OAAO,MAAM,OAAM,IAAI,CAAC;AAE5B,WAAO,EAAC,YAAW,EAAC;AAAA,EACxB;;;AClCA,MAAAC,kBAA0B;AAC1B,MAAAC,gBAA0B;AAIX,WAAR,QAAyB,WAAW,KAAW;AAClD,UAAM,WAAO,2BAAU,OAAO,CAAC,CAAC;AAEhC,iCAAU,MAAM;AACZ,WAAK,QAAQ,WAAW,SAAS;AAAA,IACrC,GAAG,CAAC,SAAS,CAAC;AAEd,WAAO,EAAE,KAAK;AAAA,EAClB;;;AZFA,MAAM,QAAQ,CAAC,UAkBT;AACJ,UAAM,eAAW,sBAAO,IAAI;AAC5B,UAAM,EAAE,MAAM,IAAI,SAAS,MAAM,KAAK;AACtC,UAAM,EAAE,KAAK,IAAI,QAAQ,MAAM,IAAI;AACnC,UAAM,EAAE,OAAO,IAAI,UAAU,MAAM,OAAO;AAC1C,UAAM,EAAE,KAAK,IAAI,QAAQ,MAAM,IAAI;AAGnC,eAAW,OAAO,OAAO,SAAS,KAAK,OAAO,MAAM,KAAK;AAEzD,UAAM,EAAC,WAAU,IAAI,SAAS,MAAM,OAAO,KAAK,OAAO,MAAM,OAAM,KAAK,KAAK;AAE7E,UAAM,EAAE,OAAM,WAAW,IAAI,aAAa,OAAO,OAAO,WAAW,KAAK,OAAM,WAAW,KAAK;AAE9F,+BAAQ,MAAI;AACV,YAAM,QAAQ,WAAW;AAAA,IAE3B,GAAE,CAAC,WAAW,KAAK,CAAC;AAEpB,UAAM,UAAU,CAAC,MAAO,MAAM,QAAQ,EAAE,cAAc;AAEtD,iCAAU,MAAI;AAEZ,YAAM,WAAW,IAAI,iBAAkB,CAAC,cAAcC,cAAa;AACjE,mBAAW,YAAY,cAAc;AACnC,cAAI,SAAS,SAAS,cAAc;AAClC,gBAAG,SAAS,kBAAkB,SAAQ;AACpC,oBAAM,QAAQ,SAAS,OAAO,aAAa,OAAO;AAClD,cAAAA,UAAS,WAAW;AAAA,YACtB;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AAED,eAAS,QAAQ,SAAS,SAAQ;AAAA,QAChC,YAAY;AAAA,QAAM,WAAW;AAAA,QAAO,SAAS;AAAA,MAC/C,CAAC;AAED,aAAO,MAAI;AACT,iBAAS,WAAW;AAAA,MACtB;AAAA,IACF,GAAE,CAAC,MAAM,KAAK,CAAC;AAEf,iCAAU,MAAM;AACd,UAAI,KAAK,MAAM,KAAK,KAAK,KAAK,QAAU;AACtC,cAAM,QAAQ;AAAA,MAChB,OAAO;AACL,cAAM,QAAQ,KAAK,MAAM,KAAK,KAAK;AAAA,MACrC;AAAA,IACF,GAAG,CAAC,KAAK,OAAO,KAAK,KAAK,CAAC;AAE3B,WACE,qCAAC,SAAI,OAAM,gBACR,MAAM,SACL,qCAAC,WAAM,OAAM,cAAa,KAAK,KAAK,SACjC,MAAM,KACT,GAEF;AAAA,MAAC;AAAA;AAAA,QACC,KAAK;AAAA,QACL,aAAW,KAAK;AAAA,QAChB,YAAU,MAAM;AAAA,QAChB;AAAA,QACA,OAAO,MAAM;AAAA,QACb,OAAM;AAAA,QACN,MAAM,MAAM;AAAA,QACZ,aAAa,MAAM,eAAe;AAAA,QAClC,IAAI,KAAK;AAAA,QACR,GAAI,OAAO,QAAQ,CAAE,IAAI,EAAE,MAAM,KAAK,MAAM;AAAA,QAC5C,GAAI,MAAM,YAAY,OAAO,QAAQ,EAAE,UAAU,KAAK,IAAI,CAAC;AAAA,QAC3D,GAAI,MAAM,WAAW,EAAE,UAAU,KAAK,IAAI,CAAC;AAAA,QAC3C,GAAI,MAAM,YAAY,EAAE,kBAAkB,MAAM,UAAU,IAAI,CAAC;AAAA;AAAA,IAClE,CACF;AAAA,EAEJ;AAEA,MAAO,gBAAQ;;;Aa1Gf,MAAAC,iBAAkB;AAMH,WAAR,SAA0B,OAa9B;AACD,UAAM,EAAE,OAAO,IAAI,UAAU,MAAM,OAAO;AAC1C,UAAM,EAAE,MAAM,IAAI,SAAS,MAAM,KAAK;AACtC,UAAM,EAAE,KAAK,IAAI,QAAQ,MAAM,IAAI;AAEnC,UAAM,UAAU,CAAC,MAAO,MAAM,QAAQ,EAAE,cAAc;AAEtD,WACE,sCAAC,SAAI,OAAM,gBACT,sCAAC,WAAM,KAAK,MAAM,MAAM,OAAM,iBAC3B,MAAM,OACT,GACA;AAAA,MAAC;AAAA;AAAA,QACC;AAAA,QACA,YAAU,MAAM;AAAA,QAChB,OAAM;AAAA,QACN,IAAI,KAAK;AAAA,QACT,aAAa,MAAM,eAAe;AAAA,QAClC,OAAO,MAAM;AAAA,QACZ,GAAI,OAAO,QAAQ,EAAE,aAAa,KAAK,MAAM,IAAI,EAAE,MAAM,KAAK,MAAM;AAAA,QACpE,GAAI,MAAM,YAAY,OAAO,QAAQ,EAAE,UAAU,KAAK,IAAI,CAAC;AAAA,QAC3D,GAAI,MAAM,WAAW,EAAE,UAAU,KAAK,IAAI,CAAC;AAAA,QAC3C,GAAI,MAAM,YAAY,EAAE,kBAAkB,MAAM,UAAU,IAAI,CAAC;AAAA,QAChE,OAAO;AAAA,UACL,GAAG,QAAQ,MAAM,QAAQ;AAAA,YACvB,QAAQ,MAAM;AAAA,UAChB,CAAC;AAAA,QACH;AAAA;AAAA,IACF,CACF;AAAA,EAEJ;;;AClDA,MAAAC,iBAAkB;AACH,WAAR,MAAuB,OAAwC;AACpE,WACE,sCAAC,WAAM,OAAM,cAAa,KAAK,MAAM,QAClC,MAAM,KACT;AAAA,EAEJ;;;ACPA,MAAAC,mBAA0B;AAC1B,MAAAC,iBAAkB;AAClB,MAAAC,iBAA2C;;;ACF3C,MAAAC,mBAA0B;AAC1B,MAAAC,gBAA0B;AAMX,WAAR,iBAAkC,QAAQ,eAAe,MAAM,WAAW;AAC7E,UAAM,cAAU,4BAAU,IAAI;AAC9B,UAAM,gBAAY,4BAAU,KAAK;AACjC,iCAAU,MAAM;AACZ,UAAI,UAAW;AACf,UAAI,QAAQ,MAAM,EAAG;AACrB,UAAI,QAAQ,QAAQ,GAAG,EAAG;AAC1B,UAAI,CAAC,QAAQ,IAAK;AAClB,UAAI,UAAU,MAAO;AACrB,UAAI,CAAC,KAAM;AAGX,gBAAU,QAAQ;AAElB,YAAM,EAAE,KAAK,KAAK,MAAM,IAAI;AAC5B,YAAM,OAAY,EAAE,CAAC,IAAI,GAAG,eAAe,OAAO,cAAc;AAGhE,eAAS,KAAK,OAAO;AAErB,UAAI,OAAO;AACP,cAAM,QAAQ,OAAK;AACf,WAAC,QAAQ,OAAO,EAAE,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,OAAO,EAAE,IAAI,CAAC,EAAE,IAAI,OAAO;AAAA,QACvE,CAAC;AAAA,MACL;AAAC;AAED,YAAM,cAAc,QAAQ,KAAK,IAAI;AAErC,mBAAa,aAAa,GAAG,EACxB,KAAK,SAAO;AACT,kBAAU,QAAQ;AAClB,YAAI,CAAC,MAAM,QAAQ,GAAG,EAAG,OAAM,IAAI,MAAM,kFAAkF;AAG3H,gBAAQ,QAAQ,cAAc,KAAK,aAAa;AAAA,MAEpD,CAAC,EAAE,MAAM,SAAO,UAAU,QAAQ,KAAK;AAAA,IAI/C,GAAG,CAAC,QAAQ,eAAe,WAAW,IAAI,CAAC;AAE3C,WAAO,EAAE,SAAS,UAAU;AAAA,EAChC;;;AClDA,MAAAC,mBAA0B;AAC1B,MAAAC,iBAA0B;AAKX,WAAR,gBAAiC,MAAM,eAAe,WAAW;AACpE,UAAM,cAAU,4BAAU,IAAI;AAC9B,kCAAU,MAAM;AACZ,UAAI,UAAW;AACf,UAAI,CAAC,MAAM,OAAQ;AACnB,cAAQ,QAAQ,cAAc,MAAM,aAAa;AAAA,IACrD,GAAG,CAAC,MAAM,eAAe,SAAS,CAAC;AACnC,WAAO,EAAE,QAAQ;AAAA,EACrB;;;ACdA,MAAAC,mBAA0B;AAC1B,MAAAC,iBAA0B;AAIX,WAAR,YAA6B,QAAQ,MAAM,OAAO,MAAM,aAAa;AACxE,UAAMC,gBAAW,4BAAU,CAAC,CAAC;AAC7B,UAAM,WAAO,4BAAU,CAAC,CAAC;AACzB,UAAM,gBAAY,4BAAU,KAAK;AAEjC,kCAAU,MAAM;AACZ,UAAI,CAAC,OAAQ;AACb,UAAI,CAAC,KAAM;AAEX,UAAI,UAAU,MAAO;AAGrB;AAAE,OAAC,YAAY;AACX,cAAM,WAAW,WAAW,QAAQ,EAAE,MAAM,OAAO,KAAK,CAAC;AACzD,YAAI,cAAc,EAAE,OAAO,MAAM,MAAM,CAAC,IAAI,GAAG,MAAM;AACrD,YAAI,CAAC,SAAS,QAAQ;AAClB,UAAAA,UAAS,QAAQ,CAAC;AAClB,eAAK,QAAQ,CAAC;AACd;AAAA,QACJ;AAAC;AAGD,cAAM,oBAAoB,WAAW,WAAW;AAGhD,YAAI,aAAa,EAAE,GAAG,mBAAmB,GAAG,KAAK,MAAM;AAEvD,kBAAU,QAAQ;AAElB,cAAM,cAAc,SAAS,IAAI,CAAC,EAAE,GAAG,MAAM,IAAI,QAAQ,CAAC,CAAC;AAC3D,cAAM,oBAAoB,YAAY,OAAO,CAAC,EAAE,KAAK,MAAM,QAAQ,KAAK;AACxE,cAAM,mBAAmB,YAAY,OAAO,CAAC,EAAE,KAAK,MAAM,QAAQ,WAAW,QAAQ,KAAK;AAE1F,yBAAiB,UAAU,iBAAiB,QAAQ,CAAC,EAAE,MAAM,UAAU,MAAM;AACzE,uBAAa,EAAE,GAAG,YAAY,GAAG,UAAU;AAAA,QAC/C,CAAC;AAED,cAAM,MAAM,mBAAmB,OAAO,EAAE,IAAI,MAAM;AAC9C,gBAAM,cAAc,QAAQ,KAAK,WAAW;AAC5C,cAAI,CAAC,YAAa;AAClB,iBAAO,MAAM,WAAW,EACnB,KAAK,SAAO,IAAI,MAAM,IAAI,KAAK,CAAC,EAChC,KAAK,gBAAc;AAChB,gBAAI,CAAC,WAAY;AACjB,gBAAI,WAAW,gBAAgB,OAAQ;AACvC,yBAAa,EAAE,GAAG,YAAY,GAAG,WAAW;AAAA,UAChD,CAAC,EACA,MAAM,SAAO;AAAE,oBAAQ,IAAI,GAAG;AAAA,UAAE,CAAC;AAAA,QAC1C,CAAC;AAGD,cAAM,mBAAmB,SAAS,OAAO,CAAC,MAAM,SAAS;AACrD,cAAI,CAAC,MAAM,SAAU,QAAO;AAC5B,cAAI,CAAC,MAAM,QAAQ,KAAK,QAAQ,EAAG,QAAO;AAC1C,iBAAO,KAAK,OAAO,KAAK,QAAQ;AAAA,QACpC,GAAG,CAAC,CAAC;AAEL,QAAAA,UAAS,QAAQ,oBAAoB,kBAAkB,KAAK,KAAK;AACjE,aAAK,QAAQ;AAGb,kBAAU,QAAQ;AAAA,MAEtB,GAAG;AAAA,IAEP,GAAG,CAAC,QAAQ,MAAM,OAAO,WAAW,CAAC;AAErC,WAAO;AAAA,MACH;AAAA,MAAM,UAAAA;AAAA,MAAU;AAAA,IACpB;AAAA,EACJ;;;AC3EA,MAAAC,iBAAwB;AAIT,WAAR,QAAyB,EAAE,UAAU,KAAK,GAAG;AAChD,UAAM,gBAAY,wBAAQ,MAAM,CAAC,QAAQ,IAAI,GAAG,CAAC,IAAI,CAAC;AAEtD,WAAO,YAAY,WAAW;AAAA,EAClC;;;ACRA,MAAAC,iBAAkB;AAElB,MAAAC,iBAAwB;AAIT,WAAR,cAA+B,EAAE,UAAU,KAAK,GAAG;AACtD,UAAM,gBAAY,wBAAQ,MAAM,CAAC,QAAQ,IAAI,GAAG,CAAC,IAAI,CAAC;AAEtD,WAAO,sCAAC,SAAI,OAAO;AAAA,MACf,SAAS;AAAA,MACT,cAAc;AAAA,MACd,qBAAqB;AAAA,MACrB,cAAc;AAAA,MACd,YAAY;AAAA,MACZ,SAAS;AAAA,IACb,KAEK,UAED,sCAAC,WAAQ,MAAM,aACX,sCAAC,aACG,sCAAC,SAAI,OAAM,mDAAkD,MAAK,YAC9D,sCAAC,UAAK,OAAM,mBAAkB,CAClC,CACJ,CACJ,CACJ;AAAA,EACJ;;;ALVe,WAAR,OAAwB,OAoB5B;AAGD,UAAM,EAAE,OAAO,IAAI,UAAU,MAAM,OAAO;AAC1C,UAAM,cAAU,4BAAU,CAAC,CAAC;AAC5B,UAAM,EAAE,OAAO,cAAc,IAAI,SAAS,MAAM,KAAK;AACrD,UAAM,EAAE,OAAO,YAAY,IAAI,SAAS,MAAM,WAAW;AACzD,UAAM,EAAE,OAAO,KAAK,IAAI,SAAS,MAAM,IAAI;AAC3C,UAAM,mBAAe,4BAAU,IAAI;AACnC,UAAM,eAAW,4BAAU,CAAC,CAAC;AAC7B,UAAM,iBAAa,uBAAO,IAAI;AAC9B,UAAM,gBAAY,4BAAU,KAAK;AACjC,UAAM,gBAAY,4BAAU,KAAK;AAEjC,UAAM,EAAE,KAAK,IAAI,QAAQ,MAAM,IAAI;AACnC,UAAM,EAAE,SAAS,eAAe,WAAW,uBAAuB,IAAI,iBAAiB,MAAM,YAAY,cAAc,OAAO,KAAK,OAAO,UAAU,KAAK;AACzJ,UAAM,EAAE,SAAS,aAAa,IAAI,gBAAgB,MAAM,SAAS,cAAc,OAAO,UAAU,KAAK;AACrG,UAAM,EAAE,SAAS,kBAAkB,WAAW,0BAA0B,IAAI,aAAoB,OAAO,OAAO,WAAW,KAAK,KAAK;AACnI,UAAM,EAAE,UAAU,iBAAiB,MAAM,aAAa,WAAW,iBAAiB,IAAI,YAAY,MAAM,UAAU,KAAK,OAAO,cAAc,OAAO,aAAa,OAAO,MAAM,IAAI;AAEjL,gCAAQ,MAAM;AACZ,UAAI,OAAO,MAAO,OAAM,IAAI,MAAM,8CAA8C;AAAA,IAClF,GAAG,CAAC,OAAO,KAAK,CAAC;AAEjB,gCAAQ,MAAM;AACZ,YAAM,OAAO,iBAAiB,SAAS,cAAc,SAAS,aAAa,SAAS,CAAC;AACrF,UAAI,YAAY,OAAO;AACrB,aAAK,QAAQ,EAAE,OAAO,aAAa,OAAO,KAAK,CAAC;AAAA,MAClD;AACA,cAAQ,QAAQ;AAAA,IAClB,GAAG,CAAC,cAAc,OAAO,aAAa,OAAO,iBAAiB,KAAK,CAAC;AAGpE,gCAAQ,MAAM;AACZ,gBAAU,QAAQ,uBAAuB,SAAS,0BAA0B,SAAS,iBAAiB;AAAA,IACxG,GAAG;AAAA,MACD,uBAAuB;AAAA,MACvB,0BAA0B;AAAA,MAC1B,iBAAiB;AAAA,IACnB,CAAC;AAED,gCAAQ,MAAM;AACZ,WAAK,QAAQ,EAAE,GAAG,KAAK,OAAO,GAAG,YAAY,MAAM;AACnD,eAAS,QAAQ,gBAAgB;AAAA,IAQnC,GAAG,CAAC,gBAAgB,OAAO,YAAY,KAAK,CAAC;AAE7C,eAAW,OAAO,OAAO,SAAS,KAAK,OAAO,cAAc,KAAK;AAEjE,aAAS,MAAM,OAAO,KAAK,OAAO,cAAc,OAAM,aAAa,KAAK;AAExE,kCAAU,MAAM;AACd,UAAI,KAAK,MAAM,KAAK,KAAK,KAAK,QAAU;AACtC,sBAAc,QAAQ;AAAA,MACxB,OAAO;AACL,sBAAc,QAAQ,KAAK,MAAM,KAAK,KAAK;AAAA,MAC7C;AAAA,IACF,GAAG,CAAC,KAAK,OAAO,KAAK,KAAK,CAAC;AAE3B,UAAM,gBAAgB,OAAO,MAAM;AACjC,YAAM,SAAS,EAAE;AACjB,UAAI,CAAC,OAAQ;AACb,gBAAU,QAAQ;AAClB,oBAAc,QAAQ,OAAO;AAC7B,mBAAa,QAAQ,MAAM,KAAK,OAAO,eAAe,EAAE,OAAO,CAAC,MAAM,MAAyB,UAAU,OAAO,KAAK,QAAQ,OAAO,gBAAgB,SAAS,KAAK,QAAQ,KAAK,MAAM,EAAE;AAAA,IACzL;AAEA,WACE;AAAA,MAAC;AAAA;AAAA,QACC,OAAO,6BAA6B,MAAM,OAAO,aAAa,EAAE;AAAA,QAChE,OAAO,EAAE,OAAO,MAAM,MAAM;AAAA;AAAA,MAE5B,sCAAC,WAAM,KAAK,KAAK,OAAO,OAAM,qCAC3B,MAAM,KACT;AAAA,MAEA,sCAAC,iBAAc,MAAM,UAAU,SAC7B;AAAA,QAAC;AAAA;AAAA,UACC,KAAK;AAAA,UACL,YAAU,MAAM;AAAA,UAChB,OAAO,cAAc;AAAA,UACrB,UAAU;AAAA,UACV,OAAM;AAAA,UACN,cAAW;AAAA,UACX,aAAW,KAAK;AAAA,UACf,GAAI,MAAM,YAAY,EAAE,kBAAkB,MAAM,UAAU,IAAI,CAAC;AAAA,UAC/D,GAAI,MAAM,WAAW,EAAE,UAAU,KAAK,IAAI,CAAC;AAAA;AAAA,QAE3C,QAAQ,MAAM,IAAI,CAAC,MAAM,UAAU;AAClC,cAAI,KAAK,UAAU;AACjB,mBACE,sCAAC,YAAO,KAAK,KAAK,IAAI,OAAO,KAAK,OAAO,UAAQ,QAC9C,KAAK,KACR;AAAA,UAEJ;AACA,iBAAO,sCAAC,YAAO,KAAK,KAAK,IAAI,OAAO,KAAK,SAAQ,KAAK,KAAM;AAAA,QAC9D,CAAC;AAAA,MACH,CAEF;AAAA,MAEA;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,IAAI,KAAK;AAAA,UACT,MAAM,KAAK;AAAA,UACX,OAAO,cAAc;AAAA;AAAA,MACvB;AAAA,MAEA,sCAAC,WAAQ,MAAM,SAAS,MAAM,UAC5B;AAAA,QAAC;AAAA;AAAA,UACC,UAAU,SAAS;AAAA,UACnB,MAAM,KAAK;AAAA;AAAA,MACb,CACF;AAAA,IAEF;AAAA,EAEJ;;;AMlKA,MAAAC,mBAA0B;AAC1B,MAAAC,iBAAkB;AAIlB,MAAAC,iBAA2C;AAgB5B,WAAR,SAA0B,OAmB9B;AACD,UAAM,EAAE,OAAO,IAAI,UAAU,MAAM,OAAO;AAC1C,UAAM,cAAU,4BAAU,CAAC,CAAC;AAC5B,UAAM,EAAE,MAAM,IAAI,SAAS,MAAM,KAAK;AACtC,UAAM,EAAE,OAAO,KAAK,IAAI,SAAS,MAAM,IAAI;AAC3C,UAAM,eAAW,4BAAU,CAAC,CAAC;AAC7B,UAAM,gBAAY,4BAAU,KAAK;AACjC,UAAM,gBAAY,4BAAU,KAAK;AACjC,UAAM,EAAE,KAAK,IAAI,QAAQ,MAAM,IAAI;AACnC,UAAM,EAAE,SAAS,eAAe,WAAW,uBAAuB,IAAI,iBAAiB,MAAM,YAAY,MAAM,OAAO,KAAK,OAAO,UAAU,KAAK;AACjJ,UAAM,EAAE,SAAS,aAAa,IAAI,gBAAgB,MAAM,SAAS,MAAM,OAAO,UAAU,KAAK;AAC7F,UAAM,EAAE,SAAS,kBAAkB,WAAW,2BAA2B,OAAM,WAAW,IAAI,aAAa,OAAO,OAAO,WAAW,KAAK,KAAK;AAC9I,UAAM,EAAE,UAAU,iBAAiB,MAAM,aAAa,WAAW,iBAAiB,IAAI,YAAY,MAAM,UAAU,KAAK,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,IAAI;AAElK,gCAAQ,MAAM;AACZ,UAAI,OAAO,MAAO,OAAM,IAAI,MAAM,8CAA8C;AAAA,IAClF,GAAG,CAAC,OAAO,KAAK,CAAC;AAEjB,gCAAQ,MAAM;AACZ,cAAQ,QAAQ,iBAAiB,SAAS,cAAc,SAAS,aAAa,SAAS,CAAC;AAAA,IAC1F,GAAG,CAAC,cAAc,OAAO,aAAa,OAAO,iBAAiB,KAAK,CAAC;AAEpE,gCAAQ,MAAM;AACZ,gBAAU,QAAQ,uBAAuB,SAAS,0BAA0B,SAAS,iBAAiB;AAAA,IACxG,GAAG;AAAA,MACD,uBAAuB;AAAA,MACvB,0BAA0B;AAAA,MAC1B,iBAAiB;AAAA,IACnB,CAAC;AAED,gCAAQ,MAAM;AACZ,WAAK,QAAQ,EAAE,GAAG,KAAK,OAAO,GAAG,YAAY,MAAM;AACnD,eAAS,QAAQ,gBAAgB;AAAA,IACnC,GAAG,CAAC,gBAAgB,OAAO,YAAY,KAAK,CAAC;AAE7C,eAAW,OAAO,OAAO,SAAS,KAAK,OAAO,MAAM,KAAK;AAGzD,kCAAU,MAAM;AACd,UAAI,KAAK,MAAM,KAAK,KAAK,KAAK,OAAW;AACzC,YAAM,QAAQ,KAAK,MAAM,KAAK,KAAK;AAAA,IACrC,GAAG,CAAC,KAAK,OAAO,KAAK,KAAK,CAAC;AAG3B,kCAAU,MAAM;AAKd,UAAI,MAAM,YAAY,MAAM;AAC1B,cAAM,IAAI,MAAM,gDAAgD;AAAA,MAClE;AAAA,IACF,GAAG,CAAC,CAAC;AAEL,UAAM,gBAAgB,OAAO,MAAM;AACjC,YAAM,SAAS,EAAE;AACjB,UAAI,CAAC,OAAQ;AACb,gBAAU,QAAQ;AAClB,YAAM,QAAQ,OAAO;AAAA,IACvB;AAEA,WACE;AAAA,MAAC;AAAA;AAAA,QACC,OAAO,eAAe,MAAM,OAAO,aAAa,EAAE;AAAA,QAClD,OAAO,EAAE,OAAO,MAAM,MAAM;AAAA;AAAA,MAE5B,sCAAC,WAAM,KAAK,KAAK,OAAO,OAAM,qCAC3B,MAAM,KACT;AAAA,MAEA,sCAAC,iBAAc,MAAM,UAAU,SAC7B;AAAA,QAAC;AAAA;AAAA,UACC,YAAU,MAAM;AAAA,UAChB,OAAM;AAAA,UACN,IAAI,KAAK;AAAA,UACT,MAAM,KAAK;AAAA,UACX,aAAa,MAAM,eAAe;AAAA,UAClC,OAAO,MAAM;AAAA,UACb,MAAM,GAAG,KAAK,KAAK;AAAA,UAClB,GAAI,MAAM,YAAY,EAAE,kBAAkB,MAAM,UAAU,IAAI,CAAC;AAAA,UAChE,UAAU;AAAA;AAAA,MACZ,GACA,sCAAC,cAAS,IAAI,GAAG,KAAK,KAAK,OACxB,QAAQ,MAAM,IAAI,CAAC,SAClB;AAAA,QAAC;AAAA;AAAA,UACC,OAAO,KAAK;AAAA,UACZ,KAAK,OAAO,KAAK,KAAK,EAAE,MAAM,GAAG,EAAE,KAAK,EAAE;AAAA;AAAA,MAC5C,CACD,CACH,CAEF;AAAA,MAEA,sCAAC,WAAQ,MAAM,SAAS,MAAM,UAC5B;AAAA,QAAC;AAAA;AAAA,UACC,UAAU,SAAS;AAAA,UACnB,MAAM,KAAK;AAAA;AAAA,MACb,CACF;AAAA,IAEF;AAAA,EAEJ;;;AC9IA,MAAAC,iBAA4B;AAG5B,MAAAC,mBAA0B;AAGX,WAAR,cAA+B,OAmBnC;AACD,UAAM,eAAW,4BAAU,CAAC,CAAC;AAE7B,UAAM,gBAAgB,CAAC,MAAM;AAC3B,YAAM,QAAQ,gBAAgB,EAAE,MAAM;AAEtC,YAAM,KAAK,OAAO,EAAE,OAAO,KAAK,EAAE,YAAY,EAAE,WAAW,KAAK,GAAG;AAEnE,UAAI,CAAC,OAAO;AACV,iBAAS,EAAE,IAAI,CAAC;AAChB;AAAA,MACF;AAEA,YAAM,gBAAqB,MAAM,SAAS;AAAA,QACxC,CAAC,SAAS,KAAK,YAAY,EAAE,OAAO;AAAA,MACtC;AAEA,eAAS,EAAE,IAAI,oBAAoB,eAAe,UAAU,QAAQ,CAAC,CAAC;AAAA,IACxE;AACA,WACE,sCAAC,SAAI,OAAM,8BACT,sCAAC,WAAM,OAAM,MAAI,MAAM,KAAM,GAC5B,MAAM,QAAQ,IAAI,CAAC,SAAS;AAC3B,YAAM,KAAK,OAAO,KAAK,KAAK,EAAE,YAAY,EAAE,WAAW,KAAK,GAAG;AAE/D,aACE,sCAAC,SAAI,OAAM,oCACT,sCAAC,SAAI,OAAM,4BACT;AAAA,QAAC;AAAA;AAAA,UACC,YAAU,MAAM;AAAA,UAChB,UAAU;AAAA,UACV,MAAK;AAAA,UACL,OAAO,KAAK;AAAA,UACZ;AAAA,UACA,MAAM,MAAM;AAAA,UACZ,OAAM;AAAA;AAAA,MACR,GACA,sCAAC,WAAM,KAAK,IAAI,OAAM,sBACnB,KAAK,KACR,CACF,GAEA,sCAAC,WAAQ,OAAO,SAAS,EAAE,KAAK,CAAC,GAAG,UAClC,sCAAC,eAAY,UAAU,SAAS,EAAE,GAAG,CACvC,CACF;AAAA,IAEJ,CAAC,CACH;AAAA,EAEJ;;;AC3EA,MAAAC,iBAA4B;AAG5B,MAAAC,mBAA2C;AAG5B,WAAR,WAA4B,OAsBhC;AACD,UAAM,gBAAY,4BAAU,IAAI;AAChC,UAAM,eAAW,4BAAU,CAAC,CAAC;AAC7B,UAAM,kBAAc,4BAAU,MAAM,eAAe,UAAU;AAC7D,UAAM,cAAU,4BAAU,MAAM,WAAW,CAAC,CAAC;AAE7C,UAAM,gBAAgB,CAAC,MAAM;AAC3B,YAAM,QAAQ,gBAAgB,EAAE,MAAM;AACtC,YAAM,MAAM,GAAG,EAAE,OAAO,IAAI,MAAM,KAAK;AAIvC,YAAM,KAAK,OAAO,EAAE,OAAO,KAAK,EAAE,YAAY,EAAE,WAAW,KAAK,GAAG;AACnE,YAAM,gBAAqB,MAAM,SAAS,KAAK,CAAC,SAAS;AACvD,eAAO,KAAK,YAAY;AAAA,MAC1B,CAAC;AAGD,UAAI,CAAC,eAAe;AAClB;AAAA,MACF;AACA,eAAS,UAAU,KAAK,IAAI,CAAC;AAE7B,gBAAU,QAAQ;AAElB,YAAMC,YAAW,oBAAoB,eAAe,YAAY,CAAC,CAAC;AAElE,cAAQ,QAAQ,QAAQ,MAAM,IAAI,CAAC,SAAS;AAC1C,YAAI,KAAK,SAAS,OAAO;AACvB,eAAK,WAAWA;AAAA,QAClB,OAAO;AACL,eAAK,WAAW,CAAC;AAAA,QACnB;AACA,eAAO;AAAA,MACT,CAAC;AAAA,IACH;AAKA,WACE,sCAAC,SAAI,OAAM,8BAA6B,OAAO,EAAE,OAAO,MAAM,MAAM,KAClE,sCAAC,eAAO,MAAM,KAAM,GACpB,sCAAC,SAAI,OAAO,wBAAwB,YAAY,KAAK,MAClD,QAAQ,MAAM,IAAI,CAAC,SAAS;AAC3B,YAAM,KAAK,OAAO,KAAK,KAAK,EAAE,YAAY,EAAE,WAAW,KAAK,GAAG;AAE/D,aACE,sCAAC,SAAI,OAAM,2BACT,sCAAC,aACC;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,OAAO,KAAK;AAAA,UACZ;AAAA,UACC,GAAI,MAAM,WAAW,IAClB,EAAE,aAAa,MAAM,WAAW,EAAE,IAClC,EAAE,MAAM,MAAM,KAAK;AAAA,UACvB,UAAU;AAAA,UACV,YAAU,MAAM;AAAA;AAAA,MAClB,GACA,sCAAC,WAAM,KAAK,MAAK,KAAK,KAAM,CAC9B,GAEA,sCAAC,WAAQ,MAAM,MAAM,UAAU,UAC7B,sCAAC,eAAY,UAAU,KAAK,UAAU,MAAM,MAAM,MAAM,CAC1D,CAGF;AAAA,IAEJ,CAAC,CACH,CACF;AAAA,EAEJ;;;ACtGA,MAAAC,iBAA4B;AAC5B,MAAAC,iBAAkC;AAClC,MAAAC,mBAA2C;AAU5B,WAAR,WAA4B,OAyBhC;AACD,UAAM,eAAW,4BAAU,iBAAiB,CAAC;AAC7C,UAAM,YAAQ,4BAAU,CAAC,CAAC;AAE1B,UAAM,gBAAY,4BAAU,CAAC,CAAC;AAC9B,UAAM,cAAU,uBAAY,IAAI;AAChC,UAAM,mBAAe,4BAAU,OAAO,YAAY,CAAC,CAAC;AACpD,kCAAU,MAAM;AACd,YAAM,UAAe,OAAO,QAAQ,CAAC,GAAG,MAAM,IAAI;AAElD,UAAI,QAAQ,QAAQ;AAMlB,kBAAU,QAAQ,OAAO,IAAI,CAAC,UAAU,oBAAoB,KAAK,CAAC;AAElE,gBAAQ,IAAI,4BAA4B;AAAA,MAC1C;AAAA,IACF,GAAG,CAAC,MAAM,IAAI,CAAC;AAEf,kCAAU,MAAM;AACd,UAAI,CAAC,cAAc,OAAO,IAAI;AAC5B;AAAA,MACF;AAMA,YAAM,SAAS,SAAS,eAAe,cAAc,OAAO,EAAE;AAE9D,UAAI,CAAC,QAAQ;AACX;AAAA,MACF;AAEA,YAAM,YAAY,OAAO,QAAQ,qBAAqB;AACtD,UAAI,CAAC,WAAW;AACd;AAAA,MACF;AAEA,YAAM,mBAAmB,UAAU;AAAA,QACjC;AAAA,MACF;AAEA,YAAM,KAAK,gBAAgB,EAAE,QAAQ,CAAC,SAA0B;AAC9D,YACE,KAAK,QAAQ,aAAa,MAAM,MAChC,SAAS,SAAS,aAAa,MAAM,IACrC;AACA,gBAAM,QAAQ,CAAC;AAAA,QACjB;AAAA,MACF,CAAC;AAAA,IACH,GAAG,CAAC,aAAa,KAAK,CAAC;AAEvB,UAAM,gBAAgB,CAAC,MAAM;AAC3B,YAAM,SAAS,EAAE;AACjB,YAAM,MAAM,OAAO,QAAQ;AAC3B,YAAM,KAAK,OAAO,QAAQ;AAE1B,YAAM,QAAQ,MAAM,MAAM,OAAO,CAAC,MAAM,MAAM,UAAU;AACtD,YAAI,MAAM,OAAO;AACf,eAAK,KAAK,IAAI;AAAA,QAChB;AAEA,eAAO;AAAA,MACT,GAAG,CAAC,CAAC;AAEL,gBAAU,QAAQ,MAAM;AAAA,IAC1B;AAEA,UAAM,aAAa,CAAC,MAAM;AACxB,QAAE,eAAe;AACjB,YAAM,OAAO,YAAY,QAAQ,SAAS;AAAA,QACxC,KAAK;AAAA,MACP,CAAC;AAED,YAAM,sBAAsB,oBAAoB,aAAa,KAAK;AAElE,YAAMC,YAAW,OAAO,KAAK,IAAI,EAAE,OAAO,CAAC,MAAM,QAAQ;AACvD,YAAI,QAAQ,KAAK,GAAG;AACpB,YAAI;AACF,kBAAQ,KAAK,MAAM,KAAK;AAAA,QAC1B,SAAS,KAAK;AAAA,QAAC;AAEf,aAAK,GAAG,IAAI;AAEZ,eAAO;AAAA,MACT,GAAG,CAAC,CAAC;AAEL,YAAM,QAAQ,CAAC,GAAG,MAAM,OAAOA,SAAQ;AACvC,gBAAU,QAAQ,MAAM,MAAM,IAAI,CAAC,SAAS;AAC1C,cAAMA,YAAW,CAAC;AAClB,4BAAoB,QAAQ,CAAC,YAAY;AACvC,UAAAA,UAAS,KAAK;AAAA,YACZ,GAAG;AAAA,YACH,OAAO,KAAK,QAAQ,IAAI;AAAA,UAC1B,CAAC;AAAA,QACH,CAAC;AAED,eAAOA;AAAA,MACT,CAAC;AAED,cAAQ,QAAQ,MAAM;AAEtB,mBAAa,QAAQ,EAAE,IAAI,SAAS,MAAM;AAAA,IAC5C;AAEA,WACE,sCAAC,SAAI,OAAM,oCACT,sCAAC,SAAI,OAAM,kCACT,sCAAC,kBACC,sCAAC,gBAAQ,MAAM,KAAM,GAEpB,UAAU,MAAM,IAAI,CAAC,MAAM,UAAU;AACpC,YAAM,QAAQ,KAAK,OAAO,CAAC,MAAM,SAAS;AACxC,aAAK,KAAK,IAAI,IAAI,KAAK;AACvB,eAAO;AAAA,MACT,GAAG,CAAC,CAAC;AACL,cAAQ,IAAI,uBAAuB;AAEnC,aACE,sCAAC,iBACC,sCAAC,iBAAS,GAAG,MAAM,KAAK,MAAM,QAAQ,CAAC,EAAG,GAC1C,sCAAC,aACC;AAAA,QAAC;AAAA;AAAA,UACC,UAAU;AAAA,UACV,MAAM;AAAA,UACN,KAAK,UAAU,iBAAiB,CAAC;AAAA,UACjC,oBAAoB;AAAA,UACpB,SAAS;AAAA;AAAA,MACX,GACA,sCAAC,UAAG,GACJ;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,SAAS;AAAA,UACT,WAAS;AAAA,UACT,OAAM;AAAA;AAAA,QACP;AAAA,MAED,GACA,sCAAC,SAAI,OAAM,eAAc,CAC3B,CACF;AAAA,IAEJ,CAAC,GAEA,CAAC,MAAM,WACN,sCAAC,iBACC,sCAAC,iBAAS,MAAM,OAAM,OAAK,GAC3B;AAAA,MAAC;AAAA;AAAA,QACC,UAAU;AAAA,QACV,KAAK;AAAA,QACL,MAAM,SAAS;AAAA,QACf,IAAI,SAAS;AAAA,QACb,aAAU;AAAA;AAAA,MAEV;AAAA,QAAC;AAAA;AAAA,UACC,UAAU,aAAa;AAAA,UACvB,KAAI;AAAA,UACJ,oBAAoB;AAAA;AAAA,MACtB;AAAA,MACA,sCAAC,UAAG;AAAA,MACJ,sCAAC,YAAO,MAAK,SAAQ,OAAM,qBAAkB,OAE7C;AAAA,MAAS;AAAA,MAET,sCAAC,YAAO,MAAK,UAAS,OAAM,qBAAkB,QAE9C;AAAA,IACF,GACA;AAAA,MAAC;AAAA;AAAA,QACC,MAAK;AAAA,QACL,IAAI,MAAM;AAAA,QACT,GAAI,MAAM,qBACP,EAAE,aAAa,MAAM,KAAK,IAC1B,EAAE,MAAM,MAAM,KAAK;AAAA,QACvB,OAAO,KAAK,UAAU,MAAM,KAAK;AAAA,QACjC,YAAU,MAAM;AAAA;AAAA,IAClB,CACF,GAED,MAAM,WAAW,CAAC,UAAU,MAAM,SACjC,sCAAC,iBACC,sCAAC,iBAAQ,OAAK,CAChB,IAEA,mEAAE,CAEN,CACF,CACF;AAAA,EAEJ;;;ACvOA,MAAAC,mBAA0B;AAC1B,MAAAC,kBAA4B;AAE5B,MAAAC,iBAAgC;AAQhC,MAAM,aAAa,CAAC,UAcd;AACJ,UAAM,EAAE,OAAO,IAAI,UAAU,MAAM,OAAO;AAC1C,UAAM,YAAQ,4BAAU,KAAK;AAC7B,UAAM,eAAW,uBAAO,IAAI;AAC5B,UAAM,EAAE,KAAK,IAAI,QAAQ,MAAM,IAAI;AACnC,UAAM,EAAE,KAAK,IAAI,QAAQ,MAAM,IAAI;AACnC,UAAM,eAAW,4BAAU,CAAC,CAAC;AAE7B,gCAAQ,MAAM;AAEZ,UAAI,EAAE,MAAM,SAAS,QAAQ,MAAM,SAAS,OAAQ;AACpD,YAAM,QAAQ,MAAM;AAAA,IAEtB,GAAG,CAAC,MAAM,KAAK,CAAC;AAEhB,UAAM,EAAE,UAAU,iBAAiB,MAAM,YAAY,IAAI,YAAY,MAAM,UAAU,MAAM,MAAM,MAAM,OAAO,MAAM,OAAO,MAAM,IAAI;AAErI,gCAAQ,MAAM;AACZ,WAAK,QAAQ,YAAY;AACzB,eAAS,QAAQ,gBAAgB;AAAA,IACnC,GAAG,CAAC,gBAAgB,OAAO,YAAY,KAAK,CAAC;AAG7C,UAAM,UAAU,CAAC,MAAM;AACrB,YAAM,UAAU,EAAE,cAAc;AAChC,YAAM,QAAQ;AAAA,IAChB;AAEA,WACE,uCAAC,SAAI,OAAM,WACT,uCAAC,SAAI,OAAM,gBACT;AAAA,MAAC;AAAA;AAAA,QACC,KAAK;AAAA,QACL,YAAU,MAAM;AAAA,QAChB;AAAA,QACA,OAAM;AAAA,QACN,MAAK;AAAA,QACL,IAAI,KAAK;AAAA,QACT,aAAa,MAAM,eAAe;AAAA,QACjC,GAAI,OAAO,QAAQ,EAAE,aAAa,KAAK,MAAM,IAAI,EAAE,MAAM,KAAK,MAAM;AAAA,QACpE,GAAI,MAAM,YAAY,OAAO,QAAQ,EAAE,UAAU,KAAK,IAAI,CAAC;AAAA,QAC3D,GAAI,MAAM,WAAW,EAAE,UAAU,KAAK,IAAI,CAAC;AAAA,QAC3C,GAAI,MAAM,YAAY,EAAE,kBAAkB,MAAM,UAAU,IAAI,CAAC;AAAA;AAAA,IAClE,GAEC,MAAM,SACL,uEAAE,QAEA,uCAAC,WAAM,OAAM,oBAAmB,KAAK,KAAK,SACvC,MAAM,KACT,CACF,CAEJ,GAEA,uCAAC,WAAQ,MAAM,SAAS,MAAM,UAC5B;AAAA,MAAC;AAAA;AAAA,QACC,UAAU,gBAAgB;AAAA,QAC1B,MAAM,MAAM;AAAA;AAAA,IACd,CACF,CACF;AAAA,EAEJ;AAEA,MAAO,sBAAQ;;;AC1Ff,MAAAC,kBAA4B;AAGb,WAAR,UAA2B,OAO/B;AACD,WACE;AAAA,MAAC;AAAA;AAAA,QACC,OAAO;AAAA,qCACwB,MAAM,OAAO,CAAC;AAAA,UACzC,MAAM,WAAW,EAAE;AAAA;AAAA;AAAA,MAGtB,MAAM,QAAQ,uCAAC,OAAE,OAAM,MAAI,MAAM,KAAM,IAAO,qEAAE;AAAA,MACjD,uCAAC,SAAI,OAAM,yBACR,MAAM,QACT;AAAA,IACF;AAAA,EAEJ;;;A3BZA,MAAAC,iBAA0B;;;A4BZ1B,MAAAC,kBAA4B;AAC5B,MAAAC,iBAA2C;AAE3C,MAAAC,mBAA0B;AAKX,WAAR,IAAqB,OAOzB;AACD,UAAM,iBAAa,wBAAQ,MAAM;AAC/B,aAAO,MAAM;AAAA,IACf,GAAG,CAAC,MAAM,UAAU,CAAC;AAErB,UAAM,SAAK,4BAAU,OAAO,OAAO,WAAW,CAAC;AAC/C,UAAM,mBAAe,uBAAO,IAAI;AAChC,UAAM,gBAAY,4BAAU,EAAE;AAC9B,UAAM,eAAW,4BAAU,KAAK;AAEhC,UAAM,cAAc,CAAC,QAAQ,QAAQ,gBAAgB;AACnD,UAAI,CAAC,OAAQ;AACb,YAAM,IAAI,WAAW,QAAQ,WAAW;AACxC,UAAI,UAAU,aAAa,CAAC;AAC5B,UAAI,UAAU,SAAS,SAAS;AAC9B,kBAAU,SAAS,OAAO,UAAU,OAAO,UAAU,KAAK;AAC1D,eAAO,UAAU,IAAI,OAAO;AAC5B,kBAAU,QAAQ;AAAA,MACpB,OAAO;AACL,YAAI,CAAC,OAAO,UAAU,SAAS,OAAO,GAAG;AACvC,iBAAO,UAAU,IAAI,OAAO;AAAA,QAC9B;AAAA,MACF;AAAC;AAAA,IACH;AAIA,kCAAU,MAAM;AAEd,UAAI,cAAc,aAAa,SAAS;AACtC,cAAM,cAAc,eAAe;AAEnC,cAAM,EAAE,QAAQ,MAAM,IAAI;AAE1B,YAAI,QAAQ;AACV,mBAAS,QAAQ;AACjB,sBAAY,aAAa,SAAS,QAAQ,WAAW;AACrD,iBAAO,EAAE,SAAS,GAAG,OAAO,OAAO,CAAC,EAAE,aAAAC,aAAY,MAAM;AACtD,wBAAY,aAAa,SAAS,QAAQA,YAAW;AAAA,UAEvD,CAAC;AAAA,QACH;AAAA,MAGF;AAEA,aAAO,MAAM;AACX,eAAO,EAAE,MAAM,GAAG,KAAK;AAAA,MACzB;AAAA,IAEF,GAAG,CAAC,CAAC;AAGL,WACE;AAAA,MAAC;AAAA;AAAA,QACC,OAAO;AAAA;AAAA,UAEH,MAAM,WAAW,EAAE;AAAA;AAAA,QAEvB,KAAK;AAAA;AAAA,MAEJ,MAAM,QAAQ,uCAAC,OAAE,OAAM,MAAI,MAAM,KAAM,IAAO,qEAAE;AAAA,MACjD,uCAAC,SAAI,OAAM,eACR,MAAM,QACT;AAAA,IACF;AAAA,EAEJ;;;AClFA,MAAAC,kBAA4B;AAC5B,MAAAC,iBAA2C;AAE3C,MAAAC,mBAA0B;AAMX,WAAR,IAAqB,OAOzB;AACD,UAAM,iBAAa,wBAAQ,MAAM;AAC/B,aAAO,MAAM;AAAA,IACf,GAAG,CAAC,MAAM,UAAU,CAAC;AACrB,UAAM,SAAK,4BAAU,OAAO,OAAO,WAAW,CAAC;AAC/C,UAAM,mBAAe,uBAAO,IAAI;AAChC,UAAM,gBAAY,4BAAU,EAAE;AAI9B,UAAM,aAAa,CAAC,QAAQ,QAAQ,gBAAgB;AAClD,UAAI,CAAC,OAAQ;AACb,YAAM,IAAI,WAAW,QAAQ,WAAW;AACxC,UAAI,UAAU,SAAS,GAAG;AACxB,eAAO,MAAM,QAAQ;AACrB,kBAAU,QAAQ;AAAA,MACpB,OAAO;AACL,YAAI,CAAC,OAAO,UAAU,SAAS,CAAC,GAAG;AACjC,iBAAO,MAAM,QAAQ;AAAA,QACvB;AAAA,MACF;AAAC;AAAA,IACH;AAIA,kCAAU,MAAM;AACd,UAAI,cAAc,aAAa,SAAS;AACtC,cAAM,cAAc,eAAe;AAEnC,cAAM,EAAE,QAAQ,MAAM,IAAI;AAG1B,YAAI,OAAO;AACT,qBAAW,aAAa,SAAS,OAAO,WAAW;AACnD,iBAAO,EAAE,SAAS,GAAG,OAAO,OAAO,CAAC,EAAE,aAAAC,aAAY,MAAM;AACtD,uBAAW,aAAa,SAAS,OAAOA,YAAW;AAAA,UACrD,CAAC;AAAA,QACH;AAAA,MAIF;AAEA,aAAO,MAAM;AACX,eAAO,EAAE,MAAM,GAAG,KAAK;AAAA,MACzB;AAAA,IAEF,GAAG,CAAC,CAAC;AAGL,WACE;AAAA,MAAC;AAAA;AAAA,QACC,OAAO;AAAA,4BACe,MAAM,OAAO,CAAC;AAAA,UAChC,MAAM,WAAW,EAAE;AAAA;AAAA,QAEvB,KAAK;AAAA;AAAA,MAEJ,MAAM,QAAQ,uCAAC,OAAE,OAAM,MAAI,MAAM,KAAM,IAAO,qEAAE;AAAA,MAGjD,uCAAC,SAAI,OAAM,mBACR,MAAM,QACT;AAAA,IACF;AAAA,EAEJ;;;AClFA,MAAAC,mBAA0B;AAC1B,MAAAC,iBAA0B;AAMX,WAAR,YAA6BC,WAAU,MAAM;AAChD,UAAM,EAAE,MAAM,aAAa,IAAI,QAAQA,WAAU,CAAC,CAAC;AACnD,UAAM,YAAQ,4BAAU,CAAC,CAAC;AAG1B,kCAAU,MAAM;AACZ,UAAI,QAAQ,aAAa,OAAO,MAAM,EAAG;AACzC,YAAM,QAAQ,oBAAoB,cAAc,IAAI,EAAE;AAAA,QAClD,CAAC,YAAY;AACT,cAAI,CAAC,SAAS,OAAO,KAAK,EAAE,SAAS,QAAQ,GAAG,GAAG;AAC/C,kBAAMA,YAAW;AAAA,cACb,QAAQ,SAAS,IAAI,CAAC,SAAS;AAC3B,uBAAO;AAAA,cACX,CAAC;AAAA,cACD;AAAA,YACJ;AACA,mBAAO;AAAA,cACH;AAAA,cACA,OAAOA;AAAA,YACX;AAAA,UACJ,OAAO;AACH,mBAAO,EAAE,QAAQ;AAAA,UACrB;AAAA,QACJ;AAAA,MACJ;AAAA,IAEJ,GAAG,CAAC,aAAa,OAAO,IAAI,CAAC;AAG7B,WAAO;AAAA,MACH,UAAU;AAAA,IACd;AAAA,EAEJ;;;ACtCA,MAAM,gBAAN,MAAoB;AAAA,IAEhB,cAAc;AACZ,WAAK,SAAS;AAAA,IAChB;AAAA,IACA,IAAI,QAAQ;AACV,aAAO,KAAK;AAAA,IACd;AAAA,IACA,YAAY;AACV,WAAK,UAAU;AAAA,IACjB;AAAA,IACA,YAAY;AACV,WAAK,UAAU;AAAA,IACjB;AAAA,EACJ;AAGe,WAAR,gBAA8C;AACjD,UAAM,oBAAoB;AAC1B,WAAO,UAAyB,mBAAmB,IAAI,cAAc,CAAC;AAAA,EAC1E;;;A/BFe,WAAR,YAA6B,OAOjC;AACD,UAAM,EAAE,KAAK,IAAI,QAAQ,MAAM,IAAI;AACnC,UAAM,EAAE,UAAAC,UAAS,IAAI,YAAY,MAAM,UAAU,KAAK,KAAK;AAG3D,kCAAU,MAAM;AACd,oBAAc,EAAE,UAAU;AAC1B,aAAO,MAAM;AACX,YAAI,cAAc,EAAE,QAAQ,GAAG;AAC7B,wBAAc,EAAE,UAAU;AAAA,QAC5B;AACA,eAAO,EAAE,MAAM;AAAA,MACjB;AAAA,IACF,GAAG,CAAC,CAAC;AAEL,WACE,uEACGA,UAAS,MAAM,IAAI,CAAC,SAAS;AAC5B,UAAI,EAAE,SAAS,OAAO,GAAG,IAAI;AAC7B,UAAI,QAAQ,OAAO,SAAS;AAC1B,eACE;AAAA,UAAC;AAAA;AAAA,YACC,KAAK;AAAA,YACL,KAAK,MAAM;AAAA,YACX,MAAM,KAAK;AAAA,YACX,SAAS,MAAM;AAAA,YACf,oBAAoB,MAAM;AAAA,YACzB,GAAG;AAAA;AAAA,UAEJ;AAAA,YAAC;AAAA;AAAA,cACC,UAAU;AAAA,cACV,MAAM,KAAK;AAAA,cACX,oBAAoB,MAAM;AAAA,cAC1B,SAAS,MAAM;AAAA;AAAA,UACjB;AAAA,QACF;AAAA,MAEJ,WAAW,QAAQ,OAAO,OAAO;AAC/B,eACE;AAAA,UAAC;AAAA;AAAA,YACC,KAAK;AAAA,YACL,KAAK,MAAM;AAAA,YACX,MAAM,KAAK;AAAA,YACX,SAAS,MAAM;AAAA,YACf,oBAAoB,MAAM;AAAA,YACzB,GAAG;AAAA;AAAA,UAEJ;AAAA,YAAC;AAAA;AAAA,cACC,UAAU;AAAA,cACV,MAAM,KAAK;AAAA,cACX,oBAAoB,MAAM;AAAA,cAC1B,SAAS,MAAM;AAAA;AAAA,UACjB;AAAA,QACF;AAAA,MAEJ,WAAW,QAAQ,OAAO,OAAO;AAC/B,eAAO;AAAA,UAAC;AAAA;AAAA,YACN,KAAK;AAAA,YACJ,GAAG;AAAA;AAAA,UAEJ;AAAA,YAAC;AAAA;AAAA,cACC,UAAU;AAAA,cACV,MAAM,KAAK;AAAA,cACX,oBAAoB,MAAM;AAAA,cAC1B,SAAS,MAAM;AAAA;AAAA,UACjB;AAAA,QACF;AAAA,MACF,WAAW,CAAC,SAAS,UAAU,cAAc,EAAE,SAAS,QAAQ,GAAG,GAAG;AACpE,eACE;AAAA,UAAC;AAAA;AAAA,YACC,KAAK;AAAA,YACL,MAAM,KAAK;AAAA,YACX,SAAS,MAAM;AAAA,YACf,oBAAoB,MAAM;AAAA,YACzB,GAAG;AAAA;AAAA,QACN;AAAA,MAEJ,WAAW,QAAQ,OAAO,SAAS;AACjC,eACE;AAAA,UAAC;AAAA;AAAA,YACC,KAAK;AAAA,YACL,MAAM,KAAK;AAAA,YACX,SAAS,MAAM;AAAA,YACf,oBAAoB,MAAM;AAAA,YACzB,GAAG;AAAA;AAAA,QACN;AAAA,MAEJ,WAAW,QAAQ,OAAO,YAAY;AACpC,eACE;AAAA,UAAC;AAAA;AAAA,YACC,KAAK;AAAA,YACL,MAAM,KAAK;AAAA,YACX,SAAS,MAAM;AAAA,YACf,oBAAoB,MAAM;AAAA,YACzB,GAAG;AAAA;AAAA,QACN;AAAA,MAEJ,WAAW,QAAQ,OAAO,SAAS;AACjC,eAAO,uCAAC,SAAM,KAAK,IAAI,OAAO,QAAQ,OAAO,MAAM,QAAQ,MAAM;AAAA,MACnE,WAAW,CAAC,UAAU,eAAe,EAAE,SAAS,QAAQ,GAAG,GAAG;AAE5D,eACE;AAAA,UAAC;AAAA;AAAA,YACC,KAAK;AAAA,YACL,MAAM,KAAK;AAAA,YACX,SAAS,MAAM;AAAA,YACf,oBAAoB,MAAM;AAAA,YACzB,GAAG;AAAA;AAAA,QACN;AAAA,MAGJ,WAAW,QAAQ,OAAO,YAAY;AACpC,eACE;AAAA,UAAC;AAAA;AAAA,YACC,KAAK;AAAA,YACL,MAAM,KAAK;AAAA,YACX,SAAS,MAAM;AAAA,YACf,oBAAoB,MAAM;AAAA,YACzB,GAAG;AAAA;AAAA,QACN;AAAA,MAEJ,WAAW,QAAQ,OAAO,YAAY;AACpC,eACE;AAAA,UAAC;AAAA;AAAA,YACC,KAAK;AAAA,YACL,MAAM,KAAK;AAAA,YACX,SAAS,MAAM;AAAA,YACf,oBAAoB,MAAM;AAAA,YACzB,GAAG;AAAA;AAAA,QACN;AAAA,MAEJ,WAAW,QAAQ,OAAO,SAAS;AACjC,eACE;AAAA,UAAC;AAAA;AAAA,YACC,KAAK;AAAA,YACL,MAAM,KAAK;AAAA,YACX,SAAS,MAAM;AAAA,YACf,oBAAoB,MAAM;AAAA,YACzB,GAAG;AAAA;AAAA,QACN;AAAA,MAEJ,WAAW,QAAQ,OAAO,cAAc;AAEtC,eACE;AAAA,UAAC;AAAA;AAAA,YACC,KAAK;AAAA,YACL,MAAM,KAAK;AAAA,YACX,SAAS,MAAM;AAAA,YACf,oBAAoB,MAAM;AAAA,YACzB,GAAG;AAAA;AAAA,QACN;AAAA,MAEJ,OAAO;AACL,eAAO,qEAAE;AAAA,MACX;AAAA,IACF,CAAC,CACH;AAAA,EAEJ;;;AgCzLA,MAAAC,kBAAkB;AAGlB,MAAAC,iBAAwB;AAExB,MAAM,kBAAuC;AAAA,IAC3C,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,OAAO;AAAA,IACP,YAAY;AAAA,MACV;AAAA,QACE,KAAK;AAAA,QACL,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,OAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAEA,MAAM,oBAAyC;AAAA,IAC7C,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,OAAO;AAAA,IACP,YAAY;AAAA,MACV;AAAA,QACE,KAAK;AAAA,QACL,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,OAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAEA,MAAM,mBAAwC;AAAA,IAC5C,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,OAAO;AAAA,IACP,YAAY;AAAA,MACV;AAAA,QACE,KAAK;AAAA,QACL,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,OAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AACA,MAAM,uBAA4C;AAAA,IAChD,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,OAAO;AAAA,IACP,YAAY;AAAA,MACV;AAAA,QACE,KAAK;AAAA,QACL,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,OAAO;AAAA,MACT;AAAA,IACF;AAAA,IACA,UAAU;AAAA,MACR;AAAA,QACE,IAAI;AAAA,QACJ,KAAK;AAAA,QACL,OAAO;AAAA,QACP,YAAY;AAAA,UACV;AAAA,YACE,KAAK;AAAA,YACL,OAAO;AAAA,UACT;AAAA,UACA;AAAA,YACE,KAAK;AAAA,YACL,OAAO;AAAA,UACT;AAAA,UACA;AAAA,YACE,KAAK;AAAA,YACL,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,KAAK;AAAA,QACL,OAAO;AAAA,QACP,YAAY;AAAA,UACV;AAAA,YACE,KAAK;AAAA,YACL,OAAO;AAAA,UACT;AAAA,UACA;AAAA,YACE,KAAK;AAAA,YACL,OAAO;AAAA,UACT;AAAA,UACA;AAAA,YACE,KAAK;AAAA,YACL,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,KAAK;AAAA,QACL,OAAO;AAAA,QACP,YAAY;AAAA,UACV;AAAA,YACE,KAAK;AAAA,YACL,OAAO;AAAA,UACT;AAAA,UACA;AAAA,YACE,KAAK;AAAA,YACL,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAEA,MAAM,mBAAwC;AAAA,IAC5C,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,OAAO;AAAA,IACP,YAAY;AAAA,MACV;AAAA,QACE,KAAK;AAAA,QACL,OAAO;AAAA,MACT;AAAA,IACF;AAAA,IACA,SAAS;AAAA,MACP;AAAA,QACE,IAAI;AAAA,QACJ,OAAO;AAAA,QACP,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,OAAO;AAAA,QACP,OAAO;AAAA,MACT;AAAA,IACF;AAAA,IACA,UAAU;AAAA,MACR;AAAA,QACE,cAAc;AAAA,QACd,UAAU;AAAA,QACV,UAAU,CAAC,oBAAoB;AAAA,MACjC;AAAA,MACA;AAAA,QACE,UAAU;AAAA,QACV,UAAU,CAAC,gBAAgB;AAAA,MAC7B;AAAA,IACF;AAAA,EACF;AAEA,MAAM,oBAAyC;AAAA,IAC7C,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,OAAO;AAAA,IACP,YAAY;AAAA,MACV;AAAA,QACE,KAAK;AAAA,QACL,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,OAAO;AAAA,MACT;AAAA,IACF;AAAA,IACA,SAAS;AAAA,MACP;AAAA,QACE,IAAI;AAAA,QACJ,OAAO;AAAA,QACP,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,OAAO;AAAA,QACP,OAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAEA,MAAM,WAAkC;AAAA,IACtC;AAAA,MACE,IAAI;AAAA,MACJ,KAAK;AAAA,MACL,OAAO;AAAA,MACP,YAAY;AAAA,QACV;AAAA,UACE,KAAK;AAAA,UACL,OAAO;AAAA,QACT;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,OAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA,SAAS;AAAA,QACP;AAAA,UACE,IAAI;AAAA,UACJ,OAAO;AAAA,UACP,OAAO;AAAA,QACT;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,OAAO;AAAA,UACP,OAAO;AAAA,QACT;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,OAAO;AAAA,UACP,OAAO;AAAA,QACT;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,OAAO;AAAA,UACP,OAAO;AAAA,QACT;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,OAAO;AAAA,UACP,OAAO;AAAA,QACT;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,OAAO;AAAA,UACP,OAAO;AAAA,QACT;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,OAAO;AAAA,UACP,OAAO;AAAA,QACT;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,OAAO;AAAA,UACP,OAAO;AAAA,QACT;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,OAAO;AAAA,UACP,OAAO;AAAA,QACT;AAAA,QACA;AAAA,UACE,IAAI;AAAA,UACJ,OAAO;AAAA,UACP,OAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA,UAAU;AAAA,QACR;AAAA,UACE,cAAc;AAAA,UACd,UAAU;AAAA,UACV,UAAU,CAAC,gBAAgB;AAAA,QAC7B;AAAA,QACA;AAAA,UACE,cACE;AAAA,UACF,UAAU;AAAA,UACV,UAAU,CAAC,iBAAiB;AAAA,QAC9B;AAAA,MACF;AAAA,IACF;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,KAAK;AAAA,MACL,OAAO;AAAA,MACP,YAAY;AAAA,QACV;AAAA,UACE,KAAK;AAAA,UACL,OAAO;AAAA,QACT;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,OAAO;AAAA,QACT;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,OAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA,IACA;AAAA,MACE,IAAI;AAAA,MACJ,KAAK;AAAA,MACL,OAAO;AAAA,MACP,YAAY;AAAA,QACV;AAAA,UACE,KAAK;AAAA,UACL,OAAO;AAAA,QACT;AAAA,QACA;AAAA,UACE,KAAK;AAAA,UACL,OAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA,UAAU,CAAC,iBAAiB,iBAAiB;AAAA,IAC/C;AAAA,EACF;AAEA,MAAM,iBAAsC;AAAA,IAC1C,IAAI;AAAA,IACJ,KAAK;AAAA,IACL,OAAO;AAAA,IACP,YAAY;AAAA,MACV;AAAA,QACE,KAAK;AAAA,QACL,OAAO;AAAA,MACT;AAAA,MACA;AAAA,QACE,KAAK;AAAA,QACL,OAAO;AAAA,MACT;AAAA,IACF;AAAA,IACA,UAAU;AAAA,MACR;AAAA,QACE,IAAI;AAAA,QACJ,KAAK;AAAA,QACL,OAAO;AAAA,QACP,YAAY;AAAA,UACV;AAAA,YACE,KAAK;AAAA,YACL,OAAO;AAAA,UACT;AAAA,UACA;AAAA,YACE,KAAK;AAAA,YACL,OAAO;AAAA,UACT;AAAA,UACA;AAAA,YACE,KAAK;AAAA,YACL,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,KAAK;AAAA,QACL,OAAO;AAAA,QACP,YAAY;AAAA,UACV;AAAA,YACE,KAAK;AAAA,YACL,OAAO;AAAA,UACT;AAAA,UACA;AAAA,YACE,KAAK;AAAA,YACL,OAAO;AAAA,UACT;AAAA,UACA;AAAA,YACE,KAAK;AAAA,YACL,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,KAAK;AAAA,QACL,OAAO;AAAA,QACP,YAAY;AAAA,UACV;AAAA,YACE,KAAK;AAAA,YACL,OAAO;AAAA,UACT;AAAA,UACA;AAAA,YACE,KAAK;AAAA,YACL,OAAO;AAAA,UACT;AAAA,QACF;AAAA,QACA,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,EACF;AAEA,MAAM,cAAc,CAAC,GAAG,UAAU,cAAc;AAEjC,WAAR,KAAsB,OAAsB;AACjD,UAAM,mBAAe,wBAAQ,MAAM;AACjC,aAAO;AAAA,IACT,GAAG,CAAC,MAAM,IAAI,CAAC;AAEf,WACE,uCAAC,cACC,uCAAC,eAAY,UAAU,cAAc,MAAM,MAAM,MAAM,GACvD,uCAAC,YAAO,MAAK,UAAS,OAAM,qBAAkB,QAE9C,CACF;AAAA,EAEJ;;;ACvZO,MAAM,oBAAoB;;;AlCQlB,WAAR,wBAAyC;AAC5C,qCAAAC,SAAS,aAAa,kBAAkB,CAAC,YAAY,MAAM,CAAC;AAC5D,qCAAAA,SAAS,MAAM,UAAU,CAAC,MAAM,CAAC;AAIjC,WAAO,iBAAiB,UAAU,CAAC,MAAM;AACrC,cAAQ,IAAI,uBAAuB,cAAc,EAAE,KAAK;AACxD,UAAI,CAAC,cAAc,EAAE,OAAO;AACxB,eAAO,EAAE,MAAM;AACf;AAAA,MACJ;AAAC;AACD,YAAM,cAAc,eAAe;AACnC,aAAO,EAAE,UAAU,OAAO,EAAE,YAAY,CAAC;AAAA,IAC7C,CAAC;AAED,aAAS,iBAAiB,mBAAmB,CAAC,MAAmB;AAC7D,YAAM,SAAS,EAAE;AACjB,UAAI,CAAC,QAAQ,MAAO;AACpB,aAAO,EAAE,UAAU,OAAO,OAAO,MAAM;AAAA,IAC3C,CAAC;AAAA,EACL;;;AmC5Be,WAAR,OAAwB,OAAO,UAAS;AAC3C,WAAO,MAAM,IAAI,UAAM;AACnB,YAAM,EAAC,SAAQ,IAAI;AACnB,UAAG,UAAS;AACR,eAAO;AAAA,UACH,GAAG;AAAA,UACH,UAAS,SAAS,IAAI,WAAO;AACzB,kBAAM,EAAC,SAAQ,IAAI;AACnB,gBAAG,UAAS;AACR,qBAAO,SAAS,IAAI,aAAS;AACzB,sBAAM,EAAC,UAAAC,UAAQ,IAAI;AACnB,oBAAGA,WAAS;AACR,yBAAO;AAAA,oBACH,GAAG;AAAA,oBACH,UAASA,UAAS,IAAI,aAAS;AAC3B,6BAAO,SAAS,OAAO;AAAA,oBAC3B,CAAC;AAAA,kBACL;AAAA,gBACJ;AACA,uBAAO;AAAA,cACX,CAAC;AAAA,YACL;AACA,mBAAO;AAAA,UACX,CAAC;AAAA,QACL;AAAA,MACJ;AAAC;AACD,aAAO,SAAS,IAAI;AAAA,IACxB,CAAC;AAAA,EACL;",
  "names": ["import_preact", "import_signals", "import_hooks", "test", "item", "callback", "import_signals", "import_hooks", "import_hooks", "import_signals", "import_hooks", "import_signals", "config", "value", "import_hooks", "import_hooks", "import_signals", "import_signals", "import_hooks", "observer", "import_preact", "import_preact", "import_signals", "import_preact", "import_hooks", "import_signals", "import_hooks", "import_signals", "import_hooks", "import_signals", "import_hooks", "controls", "import_hooks", "import_preact", "import_hooks", "import_signals", "import_preact", "import_hooks", "import_preact", "import_signals", "import_preact", "import_signals", "controls", "import_preact", "import_hooks", "import_signals", "controls", "import_signals", "import_preact", "import_hooks", "import_preact", "import_hooks", "import_preact", "import_hooks", "import_signals", "windowWidth", "import_preact", "import_hooks", "import_signals", "windowWidth", "import_signals", "import_hooks", "controls", "controls", "import_preact", "import_hooks", "register", "controls"]
}
